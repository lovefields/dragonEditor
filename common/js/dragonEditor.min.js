(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("dragonEditor", [], factory);
	else if(typeof exports === 'object')
		exports["dragonEditor"] = factory();
	else
		root["dragonEditor"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./common/js/deragnEditor/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./common/js/deragnEditor/button.js":
/*!******************************************!*\
  !*** ./common/js/deragnEditor/button.js ***!
  \******************************************/
/*! exports provided: addBtn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addBtn\", function() { return addBtn; });\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n\n\nfunction addBtn($target, icon, type, text){\n    Object(_element__WEBPACK_IMPORTED_MODULE_0__[\"removeLastsetClass\"])($target);\n    let html = storage.HTMLBtn.replace(/\\[icon_id\\]/g, icon)\n                .replace(/\\[type\\]/g, type)\n                .replace(/\\[text\\]/g, text);\n\n    $target.insertAdjacentHTML('afterend', html);\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/button.js?");

/***/ }),

/***/ "./common/js/deragnEditor/codeBlock.js":
/*!*********************************************!*\
  !*** ./common/js/deragnEditor/codeBlock.js ***!
  \*********************************************/
/*! exports provided: addCodeBlock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addCodeBlock\", function() { return addCodeBlock; });\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n\n\nfunction addCodeBlock($target){\n    Object(_element__WEBPACK_IMPORTED_MODULE_0__[\"removeLastsetClass\"])($target);\n    $target.insertAdjacentHTML('afterend', storage.HTMLCodeBlock);\n    $target.nextElementSibling.children[0].focus();\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/codeBlock.js?");

/***/ }),

/***/ "./common/js/deragnEditor/content.js":
/*!*******************************************!*\
  !*** ./common/js/deragnEditor/content.js ***!
  \*******************************************/
/*! exports provided: bindingEvent, getContentJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bindingEvent\", function() { return bindingEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContentJSON\", function() { return getContentJSON; });\n/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selector */ \"./common/js/deragnEditor/selector.js\");\n/* harmony import */ var _convertor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./convertor */ \"./common/js/deragnEditor/convertor.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log */ \"./common/js/deragnEditor/log.js\");\n/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mouse */ \"./common/js/deragnEditor/mouse.js\");\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n/* harmony import */ var _option__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./option */ \"./common/js/deragnEditor/option.js\");\n/* harmony import */ var _phrase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./phrase */ \"./common/js/deragnEditor/phrase.js\");\n/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./button */ \"./common/js/deragnEditor/button.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./list */ \"./common/js/deragnEditor/list.js\");\n/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./table */ \"./common/js/deragnEditor/table.js\");\n/* harmony import */ var _codeBlock__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./codeBlock */ \"./common/js/deragnEditor/codeBlock.js\");\n\n\n\n\n//import { keyboard } from './keyboard';\n\n\n\n\n\n\n\n\nfunction bindingEvent(){\n    let resizeFn;\n    window.addEventListener('resize', function(){\n        clearTimeout(resizeFn);\n        resizeFn = setTimeout(() => {\n            storage.windowWidth = window.innerWidth;\n            storage.windowHeight = window.innerHeight;\n\n            if(storage.windowWidth > storage.changePint){\n                storage.contentAddList.classList.add('act');\n            }else if(storage.windowWidth < storage.changePint){\n                storage.contentAddList.classList.remove('act');\n            }\n        }, 250);\n    });\n\n    // right click block\n    document.addEventListener('contextmenu', function(e){\n        e.preventDefault();\n    });\n\n    document.addEventListener('mouseup', function(e){\n        if(typeof e === 'object'){\n            let target = e.target;\n            if(e.button === 0){\n                let $pop = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])(target, 'pop');\n                let $btnPop = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])(target, 'btn_pop');\n                let $popEl = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"getElList\"])('.pop');\n\n                $popEl.forEach(function(item){\n                    if($btnPop === null){\n                        item.classList.remove('act');\n                    }\n                    if(storage.windowWidth > storage.changePint){\n                        storage.contentAddList.classList.add('act');\n                    }\n                });\n\n                if($pop !== null){\n                    $pop.classList.add('act');\n                }\n            }\n        }\n    });\n\n    // pop btns work\n    storage.popBtns.forEach(function($btn){\n        $btn.addEventListener('click', function(){\n            let target = this.dataset['target'];\n            let type = this.dataset['type'];\n            let $el = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"getEl\"])(target);\n            let btnOffset = this.getBoundingClientRect();\n            let optionsOffset = storage.popOptions.getBoundingClientRect();\n\n            $el.removeAttribute('style');\n            $el.classList.toggle('act');\n            if(type === 'position' && storage.windowWidth > storage.changePint){\n                let x = Math.floor(btnOffset.left - optionsOffset.left);\n                $el.style.cssText = `transform:translate(${x}px, 30px)`;\n            }else{\n                this.classList.toggle('act');\n            }\n        });\n    });\n\n    document.addEventListener('keydown', function(e){\n        let activeElName = document.activeElement.constructor.name;\n\n        if(activeElName === 'HTMLBodyElement'){\n            let ctrl;\n\n            if(e.ctrlKey === true || e.metaKey === true){\n                ctrl = true;\n            }\n\n            if(e.key === 'z'){\n                if(ctrl === true){\n                    e.preventDefault();\n                    Object(_log__WEBPACK_IMPORTED_MODULE_2__[\"actionPrev\"])();\n                }else if(ctrl === true && e.shiftKey === true){\n                    e.preventDefault();\n                    Object(_log__WEBPACK_IMPORTED_MODULE_2__[\"actionNext\"])();\n                }\n            }\n        }\n    });\n\n//    document.addEventListener('paste', function(e){\n//        console.log('paste', e);\n//    });\n//\n//    document.addEventListener('copy', function(e){\n//        console.log('copy', e);\n//    });\n\n    window.addEventListener('scroll', function(e){\n        document.activeElement.blur();\n        storage.popOptions.classList.remove('act');\n    });\n\n//    let setDrag;\n//    const dragStartFn = function(e){\n//        let el = this;\n//        $.dragStartEvent(e, el);\n//    };\n//    const dragOverFn = function(e){\n//        clearTimeout(setDrag);\n//        let el = this;\n//        setDrag = setTimeout(() => {\n//            $.dragOverEvent(e, el);\n//        }, 10);\n//    };\n//    const dragEndFn = function(e){\n//        let el = this;\n//        $.dragEndEvent(e, el);\n//    };\n\n    let clickFn;\n    storage.contentArea.addEventListener('click', function(e){\n        clearTimeout(clickFn);\n        clickFn = setTimeout(() => {\n            if(e.button === 0 || e.isTrusted === false){\n                Object(_mouse__WEBPACK_IMPORTED_MODULE_3__[\"contentCheckByMouse\"])(e.target, 'click');\n                Object(_option__WEBPACK_IMPORTED_MODULE_5__[\"checkOptionsValue\"])(e.target);\n                Object(_table__WEBPACK_IMPORTED_MODULE_9__[\"tableConstrol\"])(e.target);\n            }\n        }, 150);\n    });\n\n    let overFn;\n    storage.contentArea.addEventListener('mouseover', function(e){\n        clearTimeout(overFn);\n        overFn = setTimeout(() => {\n            if(storage.windowWidth > storage.changePint){\n                Object(_mouse__WEBPACK_IMPORTED_MODULE_3__[\"contentCheckByMouse\"])(e.target, 'mouseover');\n                Object(_option__WEBPACK_IMPORTED_MODULE_5__[\"checkOptionsValue\"])(e.target);\n            }\n        }, 250);\n    });\n\n    // key event control\n    storage.contentArea.addEventListener('keydown', function(e){\n        keybroadControl(e);\n    });\n\n    // content add event\n    storage.contentAddBtn.forEach(function($btn){\n        $btn.addEventListener('click', function(){\n            let type = this.dataset['value'];\n            let childCount = storage.contentArea.childElementCount;\n            let $lastEl = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"getEl\"])('.lastset');\n            let $target = $lastEl === null ? storage.contentArea.children[childCount - 1] : $lastEl\n\n            switch(type){\n                case 'text':\n                    Object(_phrase__WEBPACK_IMPORTED_MODULE_6__[\"addTextBlock\"])($target);\n                break;\n                case 'image':\n                    Object(_button__WEBPACK_IMPORTED_MODULE_7__[\"addBtn\"])($target, storage.imageIconId, 'image', 'Add on image');\n                    storage.fileInput.dataset['type'] = 'image';\n                    storage.fileInput.setAttribute('accept', 'image/*');\n                    storage.fileInput.click();\n                break;\n                case 'sticker':\n                    $.addSticker($target, this);\n                break;\n                case 'youtube':\n                    Object(_button__WEBPACK_IMPORTED_MODULE_7__[\"addBtn\"])($target, storage.youtubeIconId, 'youtube', 'Add Youtube');\n                break;\n                case 'codepen':\n                    Object(_button__WEBPACK_IMPORTED_MODULE_7__[\"addBtn\"])($target, storage.codepenIconId, 'codepen', 'Add Codepen');\n                break;\n                case 'bulletedlist':\n                    Object(_list__WEBPACK_IMPORTED_MODULE_8__[\"addList\"])($target, 'ul');\n                break;\n                case 'numberedlist':\n                    Object(_list__WEBPACK_IMPORTED_MODULE_8__[\"addList\"])($target, 'ol', '1');\n                break;\n                case 'quote':\n                    Object(_phrase__WEBPACK_IMPORTED_MODULE_6__[\"addQuote\"])($target);\n                break;\n                case 'table':\n                    Object(_table__WEBPACK_IMPORTED_MODULE_9__[\"addTable\"])($target);\n                break;\n                case 'codeblock':\n                    Object(_codeBlock__WEBPACK_IMPORTED_MODULE_10__[\"addCodeBlock\"])($target);\n                break;\n                case 'link':\n                    addLinkBox($target, storage.linkBoxData);\n                    storage.popLink.classList.remove('act');\n                    storage.popLink.querySelector('.url').value = '';\n                    storage.popLink.querySelector('.view').innerHTML = '';\n                    storage.popLink.querySelector('.btn_submit').setAttribute('disabled', 'true');\n                break;\n            }\n        });\n    });\n\n    // change view size\n    storage.viewBtn.addEventListener('click', function(){\n        storage.editorSection.classList.toggle('mobile');\n        this.classList.toggle('act');\n    });\n\n    storage.popCloseBtns.forEach(function($btn){\n        $btn.addEventListener('click', function(){\n            let target = this.dataset['target'];\n            let $el = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"getEl\"])(target);\n\n            $el.removeAttribute('style');\n            $el.classList.toggle('act');\n        });\n    });\n\n    let $linkCheckBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"getEl\"])(storage.popLinkName + ' .btn_check');\n    if($linkCheckBtn !== null){\n        $linkCheckBtn.addEventListener('click', function(){\n            let json = {};\n            let $viewEl = $.getEl($.popLinkName + ' .view');\n            let $submitBtn = $.getEl($.popLinkName + ' .btn_submit');\n            let url = $.getEl($.popLinkName + ' .url').value;\n\n            if($.urlReg.test(url) === true){\n                json.url = url;\n                fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`)\n                .then(response => {\n                    if (response.ok) return response.json();\n                    throw new Error('Network response was not ok.')\n                })\n                .then((data) => {\n                    let contents = data.contents;\n                    \n                    if(contents !== null){\n                        let regTitleCheck = new RegExp('property=\\\\\"og:title\\\\\"', 'g');\n                        let regTitle01 = new RegExp('([^])*\\\\<title>([^\"]*)<\\\\/title>([^]*)', 'g');\n                        let regTitle02 = new RegExp('([^])*\\\\<meta property=\\\\\"og:title\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n                        let regImgCheck = new RegExp('property=\\\\\"og:image\\\\\"', 'g');\n                        let regImg01 = new RegExp('([^])*\\\\<meta name=\\\\\"image\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n                        let regImg02 = new RegExp('([^])*\\\\<meta property=\\\\\"og:image\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n                        let regDecripCheck = new RegExp('property=\\\\\"og:description\\\\\"', 'g');\n                        let regDecrip01 = new RegExp('([^])*\\\\<meta name=\\\\\"description\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n                        let regDecrip02 = new RegExp('([^])*\\\\<meta property=\\\\\"og:description\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n\n                        if(regTitleCheck.test(contents)){\n                            json.title = contents.replace(regTitle02, '$2');\n                        }else{\n                            json.title = contents.replace(regTitle01, '$2');\n                        }\n\n                        if(regImgCheck.test(contents)){\n                            json.img = contents.replace(regImg02, '$2');\n                        }else{\n                            let img = contents.replace(regImg01, '$2');\n\n                            if(img.length > 500){\n                                json.img = '';\n                            }else{\n                                json.img = img;\n                            }\n                        }\n\n                        if(regDecripCheck.test(contents)){\n                            json.description = contents.replace(regDecrip02, '$2');\n                        }else{\n                            let description = contents.replace(regDecrip01, '$2');\n\n                            if(description.length > 500){\n                                json.description = '';\n                            }else{\n                                json.description = description;\n                            }\n                        }\n\n                        if(url.indexOf(\"://\") > -1){\n                            json.domain = url.split('/')[2];\n                        }else{\n                            json.domain = url.split('/')[0];\n                        }\n                    \n                        json.domain = json.domain.split(':')[0];\n\n                        $.linkBoxData = json;\n                        $submitBtn.removeAttribute('disabled');\n                        $.addLinkBox($viewEl, json, 'afterbegin');\n                    }else{\n                        $submitBtn.setAttribute('disabled', 'true');\n                        $viewEl.innerHTML = $.messageNoData;\n                    }\n                });\n            }else{\n                alert($.messageWrongURL);\n            }\n        });\n    }else{\n        console.warn('We need link check button from ' + $.popLinkName);\n    }\n\n//    // delete content\n//    $.contentDelBtn.addEventListener('click', function(){\n//        let $target = $.getEl('.lastset');\n//\n//        if($target !== null){\n//            $target.remove();\n//            $.popOptions.classList.remove('act');\n//            let count = $.contentArea.childElementCount;\n//\n//            if(count === 1){\n//                $.addTextBlock($.contentArea, '', 'beforeend');\n//            }\n//        }else{\n//            alert($.messageNotSelect);\n//        }\n//    });\n//\n//    // font size\n//    $.fontSizeSelect.addEventListener('change', function(){\n//        let value = this.value;\n//        let $target = $.activeElement;\n//        let $el = $.findContenteditable($target);\n//        let className = $.getClassName($el.classList.value, 'size');\n//\n//        if(value === 'default'){\n//            if(className !== ''){\n//                $el.classList.remove(className);\n//            }\n//        }else{\n//            if(className !== ''){\n//                $el.classList.remove(className);\n//            }\n//            $el.classList.add(value);\n//        }\n//    });\n//\n//    // color\n//    $.btnColor.forEach(function($btn){\n//        $btn.addEventListener('click', function(){\n//            let value = this.dataset['class'];\n//            let list = ['I', 'B', 'S', 'U', 'A', 'SPAN'];\n//            let $activeEl = $.activeElement;\n//            let tagName = $activeEl.tagName;\n//            let $target = $.findContenteditable($activeEl);\n//\n//            if(window.getSelection().focusNode === window.getSelection().baseNode){\n//                if(list.indexOf(tagName) > 0){\n//                    let className = $.getClassName($activeEl.classList.value, 'color');\n//\n//                    if(className !== ''){\n//                        $activeEl.classList.remove(className);\n//                    }\n//                    if(value !== 'default'){\n//                        $activeEl.classList.add(value);\n//                    }else{\n//                        if(tagName === 'SPAN'){\n//                            let text = $activeEl.textContent;\n//\n//                            $activeEl.insertAdjacentText('afterend', text);\n//                            $activeEl.remove();\n//                            $target.innerHTML = $target.innerHTML;\n//                            $.activeElement = $.wrap;\n//                        }\n//                    }\n//                    $.btnColorSelect.dataset['class'] = value;\n//                }else{\n//                    let className = $.getClassName($target.classList.value, 'color');\n//\n//                    if($.startTextCursor === $.endTextCursor){\n//                        if(className !== ''){\n//                            $target.classList.remove(className);\n//                        }\n//                        if(value !== 'default'){\n//                            $target.classList.add(value);\n//                        }\n//                        $.btnColorSelect.dataset['class'] = value;\n//                    }else{\n//                        $.wrapElement('color', null, value);\n//                    }\n//                }\n//            }else{\n//                alert($.messageWrongNode);\n//            }\n//        });\n//    });\n//\n//    // 텍스트 링크 추가\n//    $.addLinkBtn.addEventListener('click', function(){\n//        let url = $.urlInput.value;\n//\n//        if($.urlReg.test(url) === true){\n//            let isSameNode = $.checkSameNode();\n//\n//            if(isSameNode === true){\n//                $.wrapElement('link', url);\n//            }else{\n//                alert($.messageWrongNode);\n//            }\n//        }else{\n//            alert($.messageWrongURL);\n//        }\n//    });\n//\n//    // remove link\n//    $.unlinkBtn.addEventListener('click', function(){\n//        let $target = $.activeElement;\n//        let $el = $.findContenteditable($target);\n//        if($target.constructor.name === 'HTMLAnchorElement'){\n//            let text = $target.textContent;\n//\n//            $target.insertAdjacentText('afterend', text);\n//            $target.remove();\n//            $el.innerHTML = $el.innerHTML; // 내부 구조 초기화. (부셔진 node 단위 결합용)\n//        }else{\n//            alrt($.messageNotAnchorTag);\n//        }\n//    });\n//\n//    // bold\n//    $.boldBtn.addEventListener('click', function(){\n//        $.makeTextDecoration('b', 'B', 'bold');\n//    });\n//\n//    $.italicBtn.addEventListener('click', function(){\n//        $.makeTextDecoration('i', 'I', 'italic');\n//    });\n//\n//    $.underlineBtn.addEventListener('click', function(){\n//        $.makeTextDecoration('u', 'U', 'underline');\n//    });\n//\n//    $.strikeBtn.addEventListener('click', function(){\n//        $.makeTextDecoration('s', 'S', 'strike');\n//    });\n//\n//    $.wordblockBtn.addEventListener('click', function(){\n//        if(window.getSelection().focusNode === window.getSelection().baseNode){\n//            let $target = $.activeElement;\n//            let elName = $target.tagName;\n//            let $el = $.findContenteditable($target);\n//            let text = $target.textContent;\n//\n//            if(elName === 'CODE'){\n//                $target.insertAdjacentText('afterend', text);\n//                $target.remove();\n//                $el.innerHTML = $el.innerHTML; // 내부 구조 초기화. (부셔진 node 단위 결합용)\n//                $.activeElement = $.wrap;\n//            }else{\n//                $.wrapElement('wordblock');\n//            }\n//        }else{\n//            alert($.messageWrongNode);\n//        }\n//    });\n//\n//\n//    // image width\n//    $.widthInput.addEventListener('keyup', function(e){\n//        if(e.key === 'Enter'){\n//            let value = this.value;\n//            let $el = $.getEl('.lastset .img');\n//            let massage = $.messageExceedSize.replace('[size]', $.maxImageWidth);\n//\n//            if($el !== false){\n//                if($.numberReg.test(value)){\n//                    if(value <= $.maxImageWidth){\n//                        $el.setAttribute('width', value);\n//                    }else{\n//                        alert(massage);\n//                        this.value = $.maxImageWidth;\n//                        $el.setAttribute('width', $.maxImageWidth);\n//                    }\n//                    let offset = $.getEl('.lastset').getBoundingClientRect();\n//                    $.openOptionPop(offset, 'img');\n//                }else{\n//                    alert($.messageWrongValue);\n//                }\n//            }else{\n//                alert($.messageNotSelecImage);\n//            }\n//        }\n//    });\n//\n//    // codepen height\n//    $.heightInput.addEventListener('keyup', function(e){\n//        if(e.key === 'Enter'){\n//            let value = this.value;\n//            let $el = $.getEl('.lastset .iframe');\n//            let massage = $.messageExceedSize.replace('[size]', $.maxCodepenHeight);\n//            \n//            if($el !== false){\n//                if($.numberReg.test(value)){\n//                    if(value <= $.maxCodepenHeight){\n//                        $el.setAttribute('height', value);\n//                    }else{\n//                        alert(massage);\n//                        this.value = $.maxCodepenHeight;\n//                        $el.setAttribute('height', $.maxCodepenHeight);\n//                    }\n//                    let offset = $.getEl('.lastset').getBoundingClientRect();\n//                    $.openOptionPop(offset, 'codepen');\n//                }else{\n//                    alert($.messageWrongValue);\n//                }\n//            }else{\n//                alert($.messageNotSelecCodepen);\n//            }\n//        }\n//    });\n//\n//    // list type\n//    $.listTypeSelect.addEventListener('change', function(){\n//        let value = this.value;\n//        let $el = $.getEl('.lastset');\n//\n//        if($el !== false){\n//            $el.setAttribute('type', value);\n//        }\n//    });\n//\n//    // col size\n//    $.colSizeSelect.addEventListener('change', function(){\n//        let value = this.value;\n//        let elName = $.activeElement.constructor.name\n//        let $el = $.getEl('.lastset');\n//\n//        if((elName === 'HTMLTableCellElement' || elName === 'HTMLTableCaptionElement') && $el !== false){\n//            let x = parseInt($.activeElement.dataset['x']) +1\n//            let col = $el.querySelector(`col:nth-child(${x})`);\n//            let className = $.getClassName(col.classList.value, 'size');\n//\n//            col.classList.remove(className);\n//            col.classList.add(value);\n//        }\n//    });\n//\n//    // codeblock theme\n//    $.themeSelect.addEventListener('change', function(){\n//        let value = this.value;\n//        let $el = $.getEl('.lastset');\n//\n//        if($el !== false){\n//            $el.dataset['theme'] = value;\n//        }\n//    });\n//\n//    // codeblock language\n//    $.languageSelect.addEventListener('change', function(){\n//        let value = this.value;\n//        let $el = $.getEl('.lastset');\n//\n//        if($el !== false){\n//            let code = $el.childNodes[0];\n//\n//            $el.dataset['lang'] = value;\n//            code.classList.value = '';\n//            code.classList.add(value);\n//            hljs.highlightBlock(code);\n//        }\n//    });\n//\n//    // ctable td / th change\n//    $.changeThBtn.addEventListener('click', function(){\n//        $.changeCell('th');\n//    });\n//\n//    $.changeTdBtn.addEventListener('click', function(){\n//        $.changeCell('td');\n//    });\n//\n//    // text align\n//    $.textAlgin.forEach(function(item){\n//        item.addEventListener('click', function(){\n//            let type = this.dataset['value'];\n//            let $target = $.findContenteditable($.activeElement) === false ? $.findParent($.activeElement, 'item') : $.findContenteditable($.activeElement);\n//            let className = $.getClassName($target.classList.value, 'align');\n//\n//            if(className !== ''){\n//                $target.classList.remove(className);\n//            }\n//            $target.classList.add(type);\n//        });\n//    });\n//\n//    // url change\n//    $.changeUrlBtn.addEventListener('click', function(){\n//        let url = $.urlInput.value;\n//        let $el = $.getEl('.lastset');\n//        let type = $el.dataset['type'];\n//\n//        switch(true){ // not default\n//            case $.urlReg.test(url) === false :\n//                alert($.messageWrongURL);\n//            break;\n//            case $el === undefined :\n//                alert($.messageNotSelect);\n//            break;\n//            case type === 'youtube' :\n//                if($.youtubeReg.test(url)){\n//                    let video = $el.querySelector('.video');\n//                    video.setAttribute('src', url);\n//                }else{\n//                    alert($.messageWrongUrlType);\n//                }\n//            break;\n//            case type === 'codepen' :\n//                if($.codepenReg.test(url)){\n//                    let iframe = $el.querySelector('.iframe');\n//                    iframe.setAttribute('src', url);\n//                }else{\n//                    alert($.messageWrongUrlType);\n//                }\n//            break;\n//            case type === 'btn' :\n//                let btnValue = $el.dataset['value'];\n//\n//                if(btnValue === 'youtube'){\n//                    $.addYoutube($el, url);\n//                    $el.remove();\n//                    $.activeElement = $.contentArea;\n//                }else if(btnValue === 'codepen'){\n//                    $.addCodepen($el, url);\n//                    $el.remove();\n//                    $.activeElement = $.contentArea;\n//                }\n//            break;\n//        }\n//    });\n//\n//    // 파일 업로드\n//    $.fileInput.addEventListener('change', function(){\n//        let contentArea = $.contentArea;\n//        let file = this.files;\n//        let form = new FormData();\n//        let type = this.dataset['type'];\n//        let article_idx = contentArea.dataset['idx'];\n//        let temp_idx = contentArea.dataset['tempIdx'];\n//\n//        form.append('request_ype', 'upload');\n//        form.append('file_type', type);\n//        for(let item of file){\n//            form.append('file[]', item);\n//        }\n//        form.append('article_idx', article_idx);\n//        form.append('temp_idx', temp_idx);\n//\n//        // ajax\n//        $.ajax('post', $.mediaUploadURL, form, 'form', (result) => {\n//            if(result['result'] === true){\n//                let $el = $.getEl('.lastset') === false ? $.getEl(`${$.contentAreaName} > *:nth-last-child(1)`) : $.getEl('.lastset');\n//                let imgList = result['list'];\n//                let html = '';\n//\n//                for(let item of imgList){\n//                    let webp = item['webp'] === 'y' ? true : false;\n//                    html += $.HTMLMediaRow.replace(/\\[idx\\]/g, item['idx'])\n//                        .replace('[webp]', webp)\n//                        .replace('[height]', item['height'])\n//                        .replace('[width]', item['width'])\n//                        .replace('[src]', `${item['src']}${item['name']}.${item['format']}`)\n//                        .replace('[alt]', item['alt'])\n//                        .replace('[name]', item['alt']);\n//\n//                    $.addImage($el, {\n//                        'idx' : item['idx'],\n//                        'src' : `${item['src']}${item['name']}`,\n//                        'webp' : webp,\n//                        'format' : item['format'],\n//                        'alt' : item['alt'],\n//                        'width' : item['width'],\n//                        'height' : item['height']\n//                    });\n//                }\n//\n//                if($el.classList.contains('btn')){\n//                    $el.remove();\n//                }\n//                $.mediaList.insertAdjacentHTML('beforeend', html);\n//                $.popMedia.classList.add('act');\n//                this.value = '';\n//            }else{\n//                alert(result['message']);\n//            }\n//        });\n//    });\n//\n//    // add media\n//    $.addMediaListBtn.addEventListener('click', function(){\n//        $.fileInput.dataset['type'] = 'image';\n//        $.fileInput.setAttribute('accept', 'image/*');\n//        $.fileInput.click();\n//    });\n//\n//    // media content\n//    $.popMedia.addEventListener('click', function(e){\n//        let $target = e.target;\n//        let row = $.findParent($target, 'btn_add_media');\n//        let $p = this.querySelector('*[contenteditable]');\n//        let data;\n//        \n//        switch($target.tagName){\n//            case 'IMG' : \n//                let src = $target.getAttribute('src');\n//                let $el = $.getEl('.lastset') === false ? $.getEl(`${$.contentAreaName} > *:nth-last-child(1)`) : $.getEl('.lastset');\n//\n//                data = {\n//                    'width' : $target.getAttribute('width'),\n//                    'height' : $target.dataset['height'],\n//                    'webp' : row.dataset['webp'],\n//                    'alt' : row.querySelector('.name').textContent,\n//                    'src' : src.replace($.srcReg, '$1'),\n//                    'format' : src.replace($.srcReg, '$2')\n//                }\n//\n//                $.addImage($el, data);\n//            break;\n//            case 'P' : \n//                if($p !== null){\n//                    row = $.findParent($p, 'btn_add_media');\n//                    $p.removeAttribute('contenteditable');\n//                    data = {\n//                        'idx' : row.dataset['idx'],\n//                        'textContent' : $p.textContent\n//                    };\n//\n//                    //ajax\n//                    $.ajax('post', $.mediaUpdateURL, data, 'json', function(result){\n//                        if(result['result'] === true){\n//                            let src = row.querySelector('.img').getAttribute('src');\n//                            $.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n//                                item.setAttribute('alt', $p.textContent);\n//                            });\n//                        }else{\n//                            alert(result['message']);\n//                        }\n//                    });\n//                }\n//\n//                $target.setAttribute('contenteditable', true);\n//                $target.focus();\n//            break;\n//            case 'BUTTON' : \n//                if($target.classList.contains($.addMediaListBtnName.substring(1)) === false){\n//                    let idx = row.dataset['idx'];\n//                    let message = confirm($.messageDelImage);\n//                    //'작성중인 내용 안의 이미지도 전부 삭제됩니다.\\n정말로 삭제하시겠습니까?'\n//\n//                    if(message === true){\n//                        //ajax\n//                        $.ajax('delete', `${$.mediaDelURL}/${idx}`, [], 'form', function(result){\n//                            if(result['result'] === true){\n//                                let src = row.querySelector('.img').getAttribute('src');\n//                                $.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n//                                    item.remove();\n//                                    row.remove();\n//                                });\n//                            }else{\n//                                alert(result['message']);\n//                            }\n//                        });\n//                    }\n//                }\n//            break;\n//            default :\n//                if($p !== null){\n//                    row = $.findParent($p, 'btn_add_media');\n//                    data = {\n//                        'idx' : row.dataset['idx'],\n//                        'textContent' : $p.textContent\n//                    };\n//                    $p.removeAttribute('contenteditable');\n//\n//                    //ajax\n//                    $.ajax('post', $.mediaUpdateURL, data, 'json', function(result){\n//                        if(result['result'] === true){\n//                            let src = row.querySelector('.img').getAttribute('src');\n//                            $.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n//                                item.setAttribute('alt', $p.textContent);\n//                            });\n//                        }else{\n//                            alert(result['message']);\n//                        }\n//                    });\n//                }\n//        }\n//    });\n//\n//    $.popMedia.addEventListener('keydown', function(e){\n//        if(e.key === 'Enter'){\n//            e.preventDefault();\n//            let row = $.findParent(e.target, 'btn_add_media');\n//            let textContent = e.target.textContent;\n//            let data = {\n//                'idx' : row.dataset['idx'],\n//                'textContent' : textContent\n//            };\n//\n//            //ajax\n//            $.ajax('post', $.mediaUpdateURL, data, 'json', function(result){\n//                if(result['result'] === true){\n//                    let src = row.querySelector('.img').getAttribute('src');\n//                    $.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n//                        item.setAttribute('alt', $p.textContent);\n//                    });\n//                }else{\n//                    alert(result['message']);\n//                }\n//            });\n//            e.target.removeAttribute('contenteditable');\n//        }\n//    });\n//\n//    $.languageChangeBtn.forEach(function(btn){\n//        btn.addEventListener('click', function(){\n//            let prevLang = $.langStatus;\n//            let contentData = $.getJsonData();\n//            let lang = this.dataset['value'];\n//            let jsonData = $.contentData[lang];\n//            $.langStatus = lang;\n//\n//            $.languageChangeBtn.forEach(function(btn){\n//                btn.classList.remove('act');\n//            });\n//            this.classList.add('act');\n//\n//            if(jsonData.length > 0){\n//                $.setContent(jsonData);\n//            }else{\n//                let message = confirm($.messageDuplicateContent);\n//\n//                if(message === true){\n//                    $.setContent(contentData[prevLang]);\n//                }else{\n//                    $.setContent([\n//                        {\n//                            \"type\" : \"title\",\n//                            \"class\" : [\"title\"],\n//                            \"textContent\" : \"\"\n//                        },\n//                        {\n//                            \"type\" : \"text\",\n//                            \"class\" : [\"item\"],\n//                            \"textContent\" : \"\"\n//                        }\n//                    ]);\n//                }\n//            }\n//        });\n//    });\n}\n\nfunction getContentJSON(){\n    let childNodes = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"getElList\"])(`${storage.contentAreaName} > *`);\n    return Object(_convertor__WEBPACK_IMPORTED_MODULE_1__[\"htmlToJson\"])(childNodes, storage.srcReg);\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/content.js?");

/***/ }),

/***/ "./common/js/deragnEditor/convertor.js":
/*!*********************************************!*\
  !*** ./common/js/deragnEditor/convertor.js ***!
  \*********************************************/
/*! exports provided: jsonToHtml, htmlToJson */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"jsonToHtml\", function() { return jsonToHtml; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"htmlToJson\", function() { return htmlToJson; });\nfunction jsonToHtml(json){\n    let html = '';\n\n    json.forEach(function(item){\n        switch(item.type){\n            case 'title' :\n                html += `<h1 class=\"${item.class.join(' ')}\" contenteditable=\"true\" data-type=\"${item.type}\">${item.textContent}</h1>`;\n            break;\n            case 'text' :\n                html += `<p class=\"${item.class.join(' ')}\" contenteditable=\"true\" data-type=\"${item.type}\">${item.textContent}</p>`;\n            break;\n            case 'image' :\n                if(storage.useWebp === true){\n                    html += `<picture class=\"${item.class.join(' ')}\" data-type=\"${item.type}\">`;\n                    if(item.hasWebp === true){\n                        html += `<source srcset=\"${item.src}.webp\" type=\"image/webp\">`;\n                    }\n                    html += `<img src=\"${item.src}.${item.defaultFormat}\" width=\"${item.size}\" alt=\"${item.alt}\" class=\"img\"></picture>`;\n                }else{\n                    html += `<div class=\"${item.class.join(' ')}\" data-type=\"image\"><img src=\"${item.src}.${item.defaultFormat}\" width=\"${item.size}\" alt=\"${item.alt}\" class=\"img\"></div>`;\n                }\n            break;\n            case 'btn' :\n                if(item.value === 'image'){\n                    html += `<div class=\"btn\" data-type=\"${item.type}\" data-value=\"${item.value}\">`;\n                    if(item.icon.type === 'svg'){\n                        html += `<svg viewBox=\"${item.icon.viewBox}\" class=\"${item.icon.class.join(' ')}\"><use class=\"path\" xlink:href=\"${item.icon.url}\" href=\"${item.icon.url}\"></use></svg>`;\n                    }else{\n                        html += `<img src=\"${item.icon.url}\" alt=\"image icon\" class=\"\">`;\n                    }\n                    html += `${item.textContent.replace(/\\n/i, '').replace(/^\\s*/i, '').replace(/\\s*$/i, '')}</div>`;\n                }else if(item.value === 'youtube'){\n                    html += `<div class=\"btn\" data-type=\"${item.type}\" data-value=\"${item.value}\">`;\n                    if(item.icon.type === 'svg'){\n                        html += `<svg viewBox=\"${item.icon.viewBox}\" class=\"${item.icon.class.join(' ')}\"><use class=\"path\" xlink:href=\"${item.icon.url}\" href=\"${item.icon.url}\"></use></svg>`;\n                    }else{\n                        html += `<img src=\"${item.icon.url}\" alt=\"youtube icon\" class=\"\">`;\n                    }\n                    html += `${item.textContent.replace(/\\n/i, '').replace(/^\\s*/i, '').replace(/\\s*$/i, '')}</div>`;\n                }else if(item.value === 'codepen'){\n                    html += `<div class=\"btn\" data-type=\"${item.type}\" data-value=\"${item.value}\">`;\n                    if(item.icon.type === 'svg'){\n                        html += `<svg viewBox=\"${item.icon.viewBox}\" class=\"${item.icon.class.join(' ')}\"><use class=\"path\" xlink:href=\"${item.icon.url}\" href=\"${item.icon.url}\"></use></svg>`;\n                    }else{\n                        html += `<img src=\"${item.icon.url}\" alt=\"codepen icon\" class=\"\">`;\n                    }\n                    html += `${item.textContent.replace(/\\n/i, '').replace(/^\\s*/i, '').replace(/\\s*$/i, '')}</div>`;\n                }\n            break;\n            case 'youtube' :\n                html += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><iframe src=\"${item.src}\" allow=\"${item.allow}\" allowfullscreen=\"\" class=\"video\"></iframe></div>`;\n            break;\n            case 'codepen' :\n                html += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><iframe height=\"${item.height}\" title=\"\" src=\"${item.src}\" allowfullscreen=\"\" class=\"iframe\"></iframe></div>`;\n            break;\n            case 'list' :\n                if(item.listType === null){\n                    html += `<${item.tag} class=\"${item.class.join(' ')}\" data-type=\"${item.type}\">`;\n                }else{\n                    html += `<${item.tag} type=\"${item.listType}\" class=\"${item.class.join(' ')}\" data-type=\"${item.type}\">`;\n                }\n                item.child.forEach(function(row){\n                    if(row.class.length > 0){\n                        html += `<li class=\"${row.class.join(' ')}\" contenteditable=\"true\">${row.textContent}</li>`;\n                    }else{\n                        html += `<li contenteditable=\"true\">${row.textContent}</li>`;\n                    }\n                });\n                html += `</${item.tag}>`;\n            break;\n            case 'quote' :\n                html += `<blockquote class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><p class=\"text\" contenteditable=\"true\">${item.text}</p><p class=\"author\" contenteditable=\"true\">${item.author}</p></blockquote>`;\n            break;\n            case 'table' :\n                let rowNum = 0;\n                html += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><div class=\"scroll\"><table class=\"item_table\"><caption contenteditable=\"true\">${item.caption}</caption><colgroup>`;\n                item.colgroup.forEach(function(col){\n                    html += `<col class=\"${col}\">`;\n                });\n                html += '</colgroup><tbody>';\n                item.child.forEach(function(tr){\n                    let cellNum = 0;\n                    html += '<tr>';\n                    tr.forEach(function(cell){\n                        if(cell.class.length > 0){\n                            html += `<${cell.tag} class=\"${cell.class.join(' ')}\" contenteditable=\"true\" data-x=\"${cellNum}\" data-y=\"${rowNum}\">${cell.textContent}</${cell.tag}>`;\n                        }else{\n                            html += `<${cell.tag} contenteditable=\"true\" data-x=\"${cellNum}\" data-y=\"${rowNum}\">${cell.textContent}</${cell.tag}>`;\n                        }\n                        cellNum += 1;\n                    });\n                    html += '</tr>';\n                    rowNum += 1;\n                });\n                html += '</tbody></table></div><button class=\"btn btn_col_add\">Add col</button><button class=\"btn btn_col_del\">Remove col</button><button class=\"btn btn_row_add\">Add row</button><button class=\"btn btn_row_del\">Remove row</button></div>';\n            break;\n            case 'codeblock' :\n                html += `<pre class=\"${item.class.join(' ')}\" data-type=\"${item.type}\" data-theme=\"${item.theme}\" data-lang=\"${item.lang}\"><code class=\"${item.code.class.join(' ')}\" contenteditable=\"true\">${item.code.innerHTML}</code></pre>`;\n            break;\n            case 'link_box' :\n                html += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><a href=\"${item.url}\" target=\"_blank\" class=\"link_box clearfix\" draggable=\"false\"><div class=\"img_area\"><img src=\"${item.imgSrc}\" alt=\"미리보기 이미지\" class=\"img\" draggable=\"false\"></div><div class=\"text_area\"><p class=\"link_title ellipsis\">${item.title}</p><p class=\"link_description ellipsis\">${item.description}</p><p class=\"link_domain\">${item.domain}</p></div></a></div>`;\n            break;\n            default :\n                html += item.other;\n        }\n    });\n\n    return html;\n};\n\nfunction htmlToJson(nodeList){\n    let arr = [];\n\n    nodeList.forEach((item) => {\n        let type = item.dataset['type'];\n\n        switch(true){\n            case type === 'title' :\n                arr.push({\n                    'type' : 'title',\n                    'class' : [...item.classList],\n                    'textContent' : item.textContent\n                });\n            break;\n            case type === 'text' :\n                arr.push({\n                    'type' : 'text',\n                    'class' : [...item.classList],\n                    'textContent' : item.innerHTML\n                });\n            break;\n            case type === 'image' :\n                let hasWebp = item.tagName === 'PICTURE' ? true : false;\n                let img = item.querySelector('.img');\n                let link = img.getAttribute('src');\n\n                arr.push({\n                    'type' : 'image',\n                    'class' : [...item.classList],\n                    'hasWebp' : hasWebp,\n                    'size' : img.getAttribute('width'),\n                    'alt' : img.getAttribute('alt'),\n                    'src' : link.replace(storage.srcReg, '$1'),\n                    'defaultFormat' : link.replace(storage.srcReg, '$2')\n                });\n            break;\n            case type === 'youtube' :\n                let video = item.querySelector('.video');\n\n                arr.push({\n                    'type' : 'youtube',\n                    'class' : [...item.classList],\n                    'src' : video.getAttribute('src'),\n                    'allow' : video.getAttribute('allow')\n                });\n            break;\n            case type === 'codepen' :\n                let iframe = item.querySelector('.iframe');\n\n                arr.push({\n                    'type' : 'codepen',\n                    'class' : [...item.classList],\n                    'src' : iframe.getAttribute('src'),\n                    'height' : iframe.getAttribute('height'),\n                    'title' : iframe.getAttribute('title')\n                });\n            break;\n            case type === 'list_u' || type ===  'list_o' :\n                let childEl = item.querySelectorAll('li');\n                let child = [];\n\n                childEl.forEach(function(el){\n                    child.push({\n                        'class' : [...el.classList],\n                        'textContent' : el.textContent\n                    });\n                });\n\n                arr.push({\n                    'type' : 'list',\n                    'class' : [...item.classList],\n                    'tag' : item.tagName.toLowerCase(),\n                    'listType' : item.getAttribute('type'),\n                    'child' : child\n                });\n            break;\n            case type === 'quote' :\n                let text = item.querySelector('.text').textContent;\n                let author = item.querySelector('.author').textContent;\n\n                arr.push({\n                    'type' : 'quote',\n                    'class' : [...item.classList],\n                    'text' : text,\n                    'author' : author\n                });\n            break;\n            case type === 'table' :\n                let colgroup = [];\n                let tbody = [];\n                let caption = item.querySelector('caption').textContent;\n                let colList = item.querySelectorAll('col');\n                let trList = item.querySelectorAll('tr');\n\n                colList.forEach(function(col){\n                    colgroup.push(col.classList.value);\n                });\n\n                trList.forEach(function(tr){\n                    let cellList = [];\n                    let count = tr.childElementCount;\n                    let children = tr.children;\n\n                    for(let i = 0;i < count;i += 1){\n                        cellList.push({\n                            'tag' : children[i].tagName.toLowerCase(),\n                            'class' : [...children[i].classList],\n                            'textContent' : children[i].textContent\n                        });\n                    }\n\n                    tbody.push(cellList);\n                });\n\n                arr.push({\n                    'type' : 'table',\n                    'class' : [...item.classList],\n                    'caption' : caption,\n                    'colgroup' : colgroup,\n                    'child' : tbody\n                });\n            break;\n            case type === 'codeblock' :\n                let theme = item.dataset['theme'];\n                let lang = item.dataset['lang'];\n                let code = item.querySelector('code');\n\n                arr.push({\n                    'type' : 'codeblock',\n                    'class' : [...item.classList],\n                    'theme' : theme,\n                    'lang' : lang,\n                    'code' : {\n                        'class' : [...code.classList],\n                        'innerHTML' : code.innerHTML\n                    }\n                });\n            break;\n            case type === 'link_box' :\n                let url = item.querySelector('.link_box').getAttribute('href');\n                let imgSrc = item.querySelector('.img').getAttribute('src');\n                let title = item.querySelector('.link_title').textContent;\n                let description = item.querySelector('.link_description').textContent;\n                let domain = item.querySelector('.link_domain').textContent;\n\n                arr.push({\n                    'type' : 'link_box',\n                    'class' : [...item.classList],\n                    'url' : url,\n                    'imgSrc' : imgSrc,\n                    \"title\" : title,\n                    \"description\" : description,\n                    \"domain\" : domain,\n                });\n            break;\n            case type === 'btn' :\n                let icon = item.querySelector('.icon');\n                let iconTagName = icon.tagName.toLowerCase();\n                let iconUrl;\n\n                if(iconTagName === 'svg'){\n                    iconUrl = icon.querySelector('use').getAttribute('href');\n                }else{\n                    iconUrl = icon.getAttribute('src');\n                }\n\n                arr.push({\n                    'type' : 'btn',\n                    'value' : item.dataset['value'],\n                    'textContent' : item.textContent,\n                    'icon' : {\n                        \"type\" : iconTagName,\n                        \"viewBox\" : icon.getAttribute('viewBox'),\n                        \"class\" : [...icon.classList],\n                        \"url\" : iconUrl\n                    }\n                });\n            break;\n            default : \n                arr.push({\n                    'other' : item.outerHTML\n                });\n        }\n    });\n\n    return arr;\n};\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/convertor.js?");

/***/ }),

/***/ "./common/js/deragnEditor/element.js":
/*!*******************************************!*\
  !*** ./common/js/deragnEditor/element.js ***!
  \*******************************************/
/*! exports provided: getLastSetOrFocus, setLastElement, getClassName, removeLastsetClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLastSetOrFocus\", function() { return getLastSetOrFocus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLastElement\", function() { return setLastElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getClassName\", function() { return getClassName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeLastsetClass\", function() { return removeLastsetClass; });\n/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selector */ \"./common/js/deragnEditor/selector.js\");\n\n\nfunction getLastSetOrFocus($target){\n    let $activeEl = document.activeElement;\n    let $item, $btn = null;\n\n    if($activeEl.constructor.name !== 'HTMLBodyElement'){\n        switch(storage.activeElement.constructor.name){\n            case 'HTMLSpanElement' :\n                $item = storage.activeElement;\n            break;\n            case 'HTMLElement' :\n                $item = storage.activeElement;\n            break;\n            case 'HTMLAnchorElement' :\n                $item = storage.activeElement;\n            break;\n            case 'Text' :\n                $item = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])(storage.activeElement.parentElement, 'item');\n            break;\n            default :\n                $item = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])(storage.activeElement, 'item');\n        }\n    }else{\n        $item = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])($target, 'item');\n        $btn = $item === null ? Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])($target, 'btn') : $item;\n    }\n    let $el = $item === null ? $btn : $item;\n    return $el;\n}\n\nfunction setLastElement($target, children){\n    let $item = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])($target, 'item') === null ? Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])($target, 'btn') : Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])($target, 'item');\n    children.forEach(function($child){\n        $child.classList.remove('lastset');\n    });\n    $item.classList.add('lastset');\n}\n\nfunction getClassName(text, type){\n    if(storage.classList.indexOf(type) >= 0){\n        let value = text.match(storage.classReg[type]);\n\n        if(text !== '' && value !== null){\n            return value[0];\n        }else{\n            return '';\n        }\n    }else{\n        console.warn(`You send wrong type name : [${type}]`);\n    }\n}\n\nfunction removeLastsetClass($target){\n    if($target.classList.contains('lastset') === true){\n        $target.classList.remove('lastset');\n    }\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/element.js?");

/***/ }),

/***/ "./common/js/deragnEditor/index.js":
/*!*****************************************!*\
  !*** ./common/js/deragnEditor/index.js ***!
  \*****************************************/
/*! exports provided: init, getOptionValue, getContentData, getStorage, setOptionValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"init\", function() { return init; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOptionValue\", function() { return getOptionValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContentData\", function() { return getContentData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStorage\", function() { return getStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setOptionValue\", function() { return setOptionValue; });\n/* harmony import */ var _setting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setting */ \"./common/js/deragnEditor/setting.js\");\n/* harmony import */ var _content__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content */ \"./common/js/deragnEditor/content.js\");\n\n\n//let storage;\n\nclass index {\n\tconstructor(wrap = '.editor_area', options = {}){\n\t\tthis.setting(wrap, options);\n\t\tthis.bindingEvent();\n\t\tthis.closeLoding();\n\t}\n\n\tsetting(wrap, options){\n\t\tlet $this = this;\n\n\t\t$this.startTextCursor = 0;\n\t\t$this.endTextCursor = 0;\n\t\t$this.activeElement;\n\t\t$this.focusNode;\n\t\t$this.baseNode;\n\t\t$this.langStatus = 'ko';\n\t\t$this.windowWidth = window.innerWidth;\n\t\t$this.windowHeight = window.innerHeight;\n\t\t$this.changePint = typeof options.changePint !== 'number' ? 1120 : options.changePint;\n\t\t$this.maxImageWidth = typeof options.maxImageWidth !== 'number' ? 800 : options.maxImageWidth;\n\t\t$this.maxCodepenHeight = typeof options.maxCodepenHeight !== 'number' ? 1000 : options.maxCodepenHeight;\n\t\t$this.clickCehck = false;\n\t\t$this.useWebp = true;\n\t\t$this.codepenTheme = typeof options.codepenTheme !== 'string' ? 'dark' : options.codepenTheme;\n\t\t$this.multiUpload = typeof options.multiUpload !== 'boolean' ? false : options.multiUpload;\n\t\t$this.mediaUploadURL = typeof options.mediaUploadURL !== 'string' ? '' : options.mediaUploadURL;\n\t\t$this.mediaUpdateURL = typeof options.mediaUpdateURL !== 'string' ? '' : options.mediaUpdateURL;\n\t\t$this.mediaDelURL = typeof options.mediaDelURL !== 'string' ? '' : options.mediaDelURL;\n\t\t\n\t\t$this.makeLinkBoxType = typeof options.makeLinkBoxType !== 'self' ? 'self' : 'api';\n\t\t$this.makeLinkBoxURL = typeof options.makeLinkBoxURL !== 'string' ? '' : options.makeLinkBoxURL;\n\t\t$this.imageIconId = typeof options.imageIconId !== 'string' ? '#icon_image' : options.imageIconId;\n\t\t$this.youtubeIconId = typeof options.youtubeIconId !== 'string' ? '#icon_youtube' : options.youtubeIconId;\n\t\t$this.codepenIconId = typeof options.codepenIconId !== 'string' ? '#icon_codepen' : options.codepenIconId;\n\n\t\t$this.contentAreaName = typeof options.contentArea !== 'string' ? '.content_area' : options.contentArea;\n\t\t$this.popOptionsName = typeof options.popOptions !== 'string' ? '.pop_options' : options.popOptions;\n\t\t$this.popLinkName = typeof options.popLink !== 'string' ? '.pop_link_box' : options.popLink;\n\t\t$this.stickerListName = typeof options.stickerList !== 'string' ? '.pop_sticker' : options.stickerList;\n\t\t$this.contentAddListName = typeof options.contentAddList !== 'string' ? '.pop_content_list' : options.contentAddList;\n\t\t$this.addMediaListBtnName = typeof options.addMediaListBtn !== 'string' ? '.btn_add_media_list' : options.addMediaListBtn;\n\n\t\t$this.wrap = $this.checkOptionElement(wrap, '.editor_area');\n\t\t$this.editorSection = $this.checkOptionElement(options.editorSection, '.editor_section');\n\t\t$this.contentArea = $this.checkOptionElement(options.contentArea, '.content_area');\n\t\t$this.contentAddList = $this.checkOptionElement(options.contentAddList, '.pop_content_list');\n\t\t$this.mediaList = $this.checkOptionElement(options.mediaList, '.pop_media .media_list');\n\t\t$this.popMedia = $this.checkOptionElement(options.popMedia, '.pop_media');\n\t\t$this.popLang = $this.checkOptionElement(options.popLang, '.pop_lang');\n\t\t$this.popBgArea = $this.checkOptionElement(options.popBgArea, '.pop_bg');\n\t\t$this.popOptions = $this.checkOptionElement(options.popOptions, '.pop_options');\n\t\t$this.popLink = $this.checkOptionElement(options.popLink, '.pop_link_box');\n\t\t$this.lodingArea = $this.checkOptionElement(options.lodingArea, '.pop_loding');\n\t\t$this.fileInput = $this.checkOptionElement(options.fileInput, '.file_check');\n\t\t$this.uploadForm = $this.checkOptionElement(options.uploadForm, '.file_uploader');\n\t\t$this.contentAddBtn = $this.checkOptionElement(options.contentAddBtn, '.btn_add_content', 'multi');\n\t\t$this.viewBtn = $this.checkOptionElement(options.viewBtn, '.btn_mod');\n\t\t$this.popBtns = $this.checkOptionElement(options.popBtn, '.btn_pop', 'multi');\n\t\t$this.popCloseBtns = $this.checkOptionElement(options.popCloseBtns, '.btn_pop_close', 'multi');\n\t\t$this.fontSizeSelect = $this.checkOptionElement(options.fontSizeSelect, '.select_font_size');\n\t\t$this.btnColorSelect = $this.checkOptionElement(options.colorSelect, '.select_color');\n\t\t$this.btnColor = $this.checkOptionElement(options.colorSelect, '.btn_set_color', 'multi');\n\t\t$this.textAlgin = $this.checkOptionElement(options.textAlgin, '.btn_text_algin', 'multi');\n\t\t$this.listTypeSelect = $this.checkOptionElement(options.listTypeSelect, '.select_list_type');\n\t\t$this.colSizeSelect = $this.checkOptionElement(options.colSizeSelect, '.select_col');\n\t\t$this.themeSelect = $this.checkOptionElement(options.themeSelect, '.select_theme');\n\t\t$this.languageSelect = $this.checkOptionElement(options.languageSelect, '.select_language');\n\t\t$this.changeThBtn = $this.checkOptionElement(options.changeThBtn, '.btn_change_th');\n\t\t$this.changeTdBtn = $this.checkOptionElement(options.changeTdBtn, '.btn_change_td');\n\t\t$this.widthInput = $this.checkOptionElement(options.widthInput, '.options_width .value');\n\t\t$this.heightInput = $this.checkOptionElement(options.heightInput, '.options_height .value');\n\t\t$this.urlInput = $this.checkOptionElement(options.urlInput, '.options_url .value');\n\t\t$this.changeUrlBtn = $this.checkOptionElement(options.changeUrlBtn, '.btn_url_change');\n\t\t$this.addLinkBtn = $this.checkOptionElement(options.addLinkBtn, '.btn_url_link');\n\t\t$this.unlinkBtn = $this.checkOptionElement(options.unlinkBtn, '.btn_url_unlink');\n\t\t$this.boldBtn = $this.checkOptionElement(options.boldBtn, '.btn_bold');\n\t\t$this.italicBtn = $this.checkOptionElement(options.italicBtn, '.btn_italic');\n\t\t$this.underlineBtn = $this.checkOptionElement(options.underlineBtn, '.btn_underline');\n\t\t$this.strikeBtn = $this.checkOptionElement(options.strikeBtn, '.btn_strike');\n\t\t$this.wordblockBtn = $this.checkOptionElement(options.wordblockBtn, '.btn_wordblock');\n\t\t$this.contentDelBtn = $this.checkOptionElement(options.contentDelBtn, '.btn_del_content');\n\t\t$this.languageChangeBtn = $this.checkOptionElement(options.languageChangeBtn, '.btn_chang_lang', 'multi');\n\t\t$this.addMediaListBtn = $this.checkOptionElement(options.addMediaListBtn, '.btn_add_media_list');\n\n\t\t$this.HTMLTextBlock = '<p class=\"item item_text lastset\" contenteditable=\"true\" data-type=\"text\">[content]</p>';\n\t\t$this.HTMLBtn = '<div class=\"btn lastset\" data-type=\"btn\" data-value=\"[type]\"><svg viewbox=\"0 0 50 50\" class=\"icon\"><use class=\"path\" xlink:href=\"[icon_id]\" href=\"[icon_id]\" /></svg>[text]</div>';\n\t\t$this.HTMLList = '<[tag] [type] class=\"item item_list lastset\" data-type=\"[dataType]\">[child]</[tag]>';\n\t\t$this.HTMLChildList = '<li contenteditable=\"true\">[content]</li>';\n\t\t$this.HTMLsticker = '<div class=\"item item_sticker lastset\" data-type=\"sticker\">[el]</div>';\n\t\t$this.HTMLQuote = '<blockquote class=\"item item_quote lastset\" data-type=\"quote\"><p class=\"text\" contenteditable=\"true\"></p><p class=\"author\" contenteditable=\"true\"></p></blockquote>';\n\t\t$this.HTMLTable = '<div class=\"item item_table_area\" data-type=\"table\"><div class=\"scroll\"><table class=\"item_table\"><caption contenteditable=\"true\"></caption><colgroup><col class=\"size_100\"><col class=\"size_100\"><col class=\"size_100\"><col class=\"size_100\"></colgroup><tbody><tr><th contenteditable=\"true\" data-x=\"0\" data-y=\"0\"></th><th contenteditable=\"true\" data-x=\"1\" data-y=\"0\"></th><th contenteditable=\"true\" data-x=\"2\" data-y=\"0\"></th><th contenteditable=\"true\" data-x=\"3\" data-y=\"0\"></th></tr><tr><td contenteditable=\"true\" data-x=\"0\" data-y=\"1\"></td><td contenteditable=\"true\" data-x=\"1\" data-y=\"1\"></td><td contenteditable=\"true\" data-x=\"2\" data-y=\"1\"></td><td contenteditable=\"true\" data-x=\"3\" data-y=\"1\"></td></tr></tbody></table></div><button class=\"btn btn_col_add\">Add col</button><button class=\"btn btn_col_del\">Remove col</button><button class=\"btn btn_row_add\">Add row</button><button class=\"btn btn_row_del\">Remove row</button></div>';\n\t\t$this.HTMLCodeBlock = '<pre class=\"item item_codeblock lastset\" data-type=\"codeblock\" data-theme=\"default\" data-lang=\"text\"><code class=\"nohighlight\" contenteditable=\"true\"></code></pre>';\n\t\t$this.HTMLLinkBox = '<div class=\"item lastset\" data-type=\"link_box\"><a href=\"[url]\" target=\"_blank\" rel=\"nofollow\" class=\"link_box clearfix\" draggable=\"false\"><div class=\"img_area\"><img src=\"[imgSrc]\" alt=\"미리보기 이미지\" class=\"img\" draggable=\"false\"></div><div class=\"text_area\"><p class=\"link_title ellipsis\">[title]</p><p class=\"link_description ellipsis\">[description]</p><p class=\"link_domain\">[domain]</p></div></a></div>';\n\t\t$this.HTMLOption = '<option value=\"[value]\">[text]</option>';\n\t\t//$this.HTMLPositionBar = '<div class=\"position_bar\"></div>';\n\t\t$this.HTMLMediaRow = '<li class=\"btn_add_media\" data-webp=\"[webp]\" data-idx=\"[idx]\"><div class=\"img_area\"><img src=\"[src]\" alt=\"[alt]\" width=\"[width]\" data-height=\"[height]\" class=\"img\"></div><p class=\"name\">[name]</p><button class=\"btn_remove_media\" data-idx=\"[idx]\">삭제</button></li>';\n\t\t$this.HTMLImageType01 = '<picture class=\"item item_image lastset\" data-type=\"image\">[source]<img src=\"[src]\" width=\"[width]\" alt=\"[alt]\" class=\"img\"></picture>';\n\t\t$this.HTMLImageSource = '<source srcset=\"[webp]\" type=\"image/webp\">';\n\t\t$this.HTMLImageType02 = '<div class=\"item item_image lastset\" data-type=\"image\"><img src=\"[src]\" width=\"[width]\" alt=\"[alt]\" class=\"img\"></div>';\n\t\t$this.HTMLYoutube = '<div class=\"item item_video lastset\" data-type=\"youtube\"><iframe src=\"[src]\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen class=\"video\"></iframe></div>';\n\t\t$this.HTMLCodepen = '<div class=\"item item_codepen lastset\" data-type=\"codepen\"><iframe height=\"[height]\" title=\"\" src=\"[src]\" allowfullscreen class=\"iframe\"></iframe></div>';\n\n\t\t$this.srcReg = new RegExp('(.*)\\\\.((jpg|png|gif|webp|bmp))', 'i');\n\t\t$this.youtubeReg = new RegExp('www.youtube.com', 'g');\n\t\t$this.youtubeCodeReg = new RegExp('((https:\\\\/\\\\/)?(www\\\\.)?youtu(be)?\\\\.(be|com)\\\\/(embed\\\\/|watch\\\\?v=)?)([^=\\\\/& :]*)(.*)', 'i');\n\t\t$this.codepenReg = new RegExp('codepen.io', 'g');\n\t\t$this.codepenCodeReg = new RegExp('(https:\\\\/\\\\/codepen\\\\.io\\\\/)(\\\\w*)\\\\/(pen|embed)\\\\/([A-Za-z]*)(.*)', 'i');\n\t\t$this.urlReg = new RegExp('https?:\\\\/\\\\/(\\\\w*:\\\\w*@)?[-\\\\w.]+(:\\\\d+)?(\\\\/([\\\\w\\\\/_.]*(\\\\?\\\\S+)?)?)?', 'i');\n\t\t$this.numberReg = new RegExp('[0-9]', 'g');\n\t\t$this.classReg = {\n\t\t\t'color' : new RegExp('color_[a-z0-9_]*', 'i'),\n\t\t\t'size' : new RegExp('size_[0-9]*', 'i'),\n\t\t\t'align' : new RegExp('align_(left|center|right)*', 'i')\n\t\t};\n\t\t$this.classList = ['color', 'size', 'align'];\n\n\t\t$this.messageNotSelecCodepen = typeof options.messageNotSelecCodepen !== 'string' ? `You didn't select Codepen` : options.messageNotSelecCodepen;\n\t\t$this.messageNotSelecImage = typeof options.messageNotSelecImage !== 'string' ? `You didn't select image` : options.messageNotSelecImage;\n\t\t$this.messageWrongURL = typeof options.messageWrongURL !== 'string' ? `Please enter a valid URL.\\nYou must enter http or https first.` : options.messageWrongURL;\n\t\t$this.messageNotSelect = typeof options.messageNotSelect !== 'string' ? `No item selected Please try again.` : options.messageNotSelect;\n\t\t$this.messageNoData = typeof options.messageNoData !== 'string' ? `Could not get data` : options.messageNoData;\n\t\t$this.messageExceedSize = typeof options.messageExceedSize !== 'string' ? `Can't exceed [size]px` : options.messageExceedSize;\n\t\t$this.messageWrongNode = typeof options.messageWrongNode !== 'string' ? 'Wrong cursor pointer' : options.messageWrongNode;\n\t\t$this.messageNotAnchorTag = typeof options.messageNotAnchorTag !== 'string' ? 'Active item is not link' : options.messageNotAnchorTag;\n\t\t$this.messageWrongValue = typeof options.messageWrongValue !== 'string' ? 'Wrong value' : options.messageWrongValue;\n\t\t$this.messageWrongUrlType = typeof options.messageWrongUrlType !== 'string' ? 'Wrong URL type.' : options.messageWrongUrlType;\n\t\t$this.messageDelImage = typeof options.messageDelImage !== 'string' ? 'All images of the document you area creating will also disappear.\\nAre you sure you want to delete it?' : options.messageDelImage;\n\t\t$this.messageDuplicateContent = typeof options.messageDuplicateContent !== 'string' ? 'This language not have content.\\nDo you want duplicate to content?' : options.messageDuplicateContent;\n\t\t$this.messageNotSetAjax = 'Didn\\'t setting Ajax url.';\n\n\t\t$this.linkBoxData = {};\n\t\t$this.contentData = {\n\t\t\t'ko' : {},\n\t\t\t'en' : {},\n\t\t\t'es' : {}\n\t\t};\n\t\t$this.logData = [];\n\t}\n\n\tbindingEvent(){\n\t\tlet $this = this;\n\t\tif($this.mediaUploadURL === '' || $this.mediaUpdateURL === '' || $this.mediaDelURL === ''){\n\t\t\tconsole.warn($this.messageNotSetAjax);\n\t\t\treturn;\n\t\t}\n\t\t$this.activeElement = $this.wrap;\n\n\t\tif($this.windowWidth > $this.changePint){\n\t\t\t$this.contentAddList.classList.add('act');\n\t\t}else if($this.windowWidth < $this.changePint){\n\t\t\t$this.contentAddList.classList.remove('act');\n\t\t}\n\n\t\tif($this.multiUpload === true){\n\t\t\t$this.fileInput.setAttribute('multiple', true);\n\t\t}\n\n\t\tlet resizeFn;\n\t\twindow.addEventListener('resize', function(){\n\t\t\tclearTimeout(resizeFn);\n\t\t\tresizeFn = setTimeout(() => {\n\t\t\t\t$this.windowWidth = window.innerWidth;\n\t\t\t\t$this.windowHeight = window.innerHeight;\n\n\t\t\t\tif($this.windowWidth > $this.changePint){\n\t\t\t\t\t$this.contentAddList.classList.add('act');\n\t\t\t\t}else if($this.windowWidth < $this.changePint){\n\t\t\t\t\t$this.contentAddList.classList.remove('act');\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}, 250);\n\t\t});\n\n\t\t// right click block and content menu open\n\t\tdocument.addEventListener('contextmenu', function(e){\n\t\t\te.preventDefault();\n\t\t});\n\n\t\tdocument.addEventListener('mouseup', function(e){\n\t\t\tif(typeof e === 'object'){\n\t\t\t\tlet target = e.target;\n\t\t\t\tif(e.button === 0){\n\t\t\t\t\tlet $pop = $this.findParent(target, 'pop');\n\t\t\t\t\tlet $btnPop = $this.findParent(target, 'btn_pop');\n\t\t\t\t\tlet $popEl = $this.getElList('.pop');\n\n\t\t\t\t\t$popEl.forEach(function(item){\n\t\t\t\t\t\tif($btnPop === false){\n\t\t\t\t\t\t\titem.classList.remove('act');\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlet name = $btnPop.dataset['target'];\n\n\t\t\t\t\t\t\tif(item !== $this.getEl(name)){\n\t\t\t\t\t\t\t\titem.classList.remove('act');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif($this.windowWidth > $this.changePint){\n\t\t\t\t\t\t\t$this.contentAddList.classList.add('act');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$this.popBtns.forEach(function(btn){\n\t\t\t\t\t\tif($btnPop !== btn && !btn.classList.contains('select_color')){\n\t\t\t\t\t\t\tbtn.classList.remove('act');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif($pop !== false){\n\t\t\t\t\t\t$pop.classList.add('act');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('keydown', function(e){\n\t\t\tlet activeElName = document.activeElement.constructor.name;\n\n\t\t\tif(activeElName === 'HTMLBodyElement'){\n\t\t\t\tlet ctrl;\n\n\t\t\t\tif(e.ctrlKey === true || e.metaKey === true){\n\t\t\t\t\tctrl = true;\n\t\t\t\t}\n\n\t\t\t\tif(e.key === 'z'){\n\t\t\t\t\tif(ctrl === true){\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$this.actionPrev();\n\t\t\t\t\t}else if(ctrl === true && e.shiftKey === true){\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$this.actionNext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('paste', function(e){\n\t\t\tconsole.log('paste', e);\n\t\t});\n\n\t\tdocument.addEventListener('copy', function(e){\n\t\t\tconsole.log('copy', e);\n\t\t});\n\n\t\twindow.addEventListener('scroll', function(e){\n\t\t\t//if($this.windowWidth > $this.changePint){\n\t\t\t//\tdocument.activeElement.blur();\n\t\t\t//\t$this.popOptions.classList.remove('act');\n\t\t\t//}\n\t\t});\n\n\t\tlet setDrag;\n\t\tconst dragStartFn = function(e){\n\t\t\tlet el = this;\n\t\t\t$this.dragStartEvent(e, el);\n\t\t};\n\t\tconst dragOverFn = function(e){\n\t\t\tclearTimeout(setDrag);\n\t\t\tlet el = this;\n\t\t\tsetDrag = setTimeout(() => {\n\t\t\t\t$this.dragOverEvent(e, el);\n\t\t\t}, 10);\n\t\t};\n\t\tconst dragEndFn = function(e){\n\t\t\tlet el = this;\n\t\t\t$this.dragEndEvent(e, el);\n\t\t};\n\n\t\tlet clickFn;\n\t\t$this.contentArea.addEventListener('click', function(e){\n\t\t\tclearTimeout(clickFn);\n\t\t\tclickFn = setTimeout(() => {\n\t\t\t\tif(e.button === 0 || e.isTrusted === false){\n\t\t\t\t\t$this.contentCheckByMouse(e.target, 'click');\n\t\t\t\t\t$this.checkOptionsValue(e.target);\n\t\t\t\t\t$this.tableConstrol(e.target);\n\t\t\t\t}\n\t\t\t}, 150);\n\t\t});\n\n\t\tlet overFn;\n\t\t$this.contentArea.addEventListener('mouseover', function(e){\n\t\t\tclearTimeout(overFn);\n\t\t\toverFn = setTimeout(() => {\n\t\t\t\tif($this.windowWidth > $this.changePint){\n\t\t\t\t\t$this.contentCheckByMouse(e.target, 'mouseover');\n\t\t\t\t\t$this.checkOptionsValue(e.target);\n\t\t\t\t}\n\t\t\t}, 250);\n\t\t});\n\n\t\t// key event control\n\t\t$this.contentArea.addEventListener('keydown', function(e){\n\t\t\t$this.keybroadControl(e);\n\t\t});\n\n\t\t// content add event\n\t\t$this.contentAddBtn.forEach(function($btn){\n\t\t\t$btn.addEventListener('click', function(){\n\t\t\t\tlet type = this.dataset['value'];\n\t\t\t\tlet childCount = $this.contentArea.childElementCount;\n\t\t\t\tlet $lastEl = $this.getEl('.lastset');\n\t\t\t\tlet $target = $lastEl === false ? $this.contentArea.children[childCount - 1] : $lastEl\n\n\t\t\t\tswitch(type){\n\t\t\t\t\tcase 'text':\n\t\t\t\t\t\t$this.addTextBlock($target);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'image':\n\t\t\t\t\t\t$this.addBtn($target, $this.imageIconId, 'image', 'Add on image');\n\t\t\t\t\t\t$this.fileInput.dataset['type'] = 'image';\n\t\t\t\t\t\t$this.fileInput.setAttribute('accept', 'image/*');\n\t\t\t\t\t\t$this.fileInput.click();\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'sticker':\n\t\t\t\t\t\t$this.addSticker($target, this);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'youtube':\n\t\t\t\t\t\t$this.addBtn($target, $this.youtubeIconId, 'youtube', 'Add Youtube');\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'codepen':\n\t\t\t\t\t\t$this.addBtn($target, $this.codepenIconId, 'codepen', 'Add Codepen');\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bulletedlist':\n\t\t\t\t\t\t$this.addList($target, 'ul');\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'numberedlist':\n\t\t\t\t\t\t$this.addList($target, 'ol', '1');\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'quote':\n\t\t\t\t\t\t$this.addQuote($target);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'table':\n\t\t\t\t\t\t$this.addTable($target);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'codeblock':\n\t\t\t\t\t\t$this.addCodeBlock($target);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\t$this.addLinkBox($target, $this.linkBoxData);\n\t\t\t\t\t\t$this.popLink.classList.remove('act');\n\t\t\t\t\t\t$this.popLink.querySelector('.url').value = '';\n\t\t\t\t\t\t$this.popLink.querySelector('.view').innerHTML = '';\n\t\t\t\t\t\t$this.popLink.querySelector('.btn_submit').setAttribute('disabled', 'true');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// change view size\n\t\t$this.viewBtn.addEventListener('click', function(){\n\t\t\t$this.editorSection.classList.toggle('mobile');\n\t\t\tthis.classList.toggle('act');\n\t\t});\n\n\t\t// pop btns work\n\t\t$this.popBtns.forEach(function($btn){\n\t\t\t$btn.addEventListener('click', function(){\n\t\t\t\tlet target = this.dataset['target'];\n\t\t\t\tlet type = this.dataset['type'];\n\t\t\t\tlet $el = $this.getEl(target);\n\t\t\t\tlet btnOffset = this.getBoundingClientRect();\n\t\t\t\tlet optionsOffset = $this.popOptions.getBoundingClientRect();\n\n\t\t\t\t$el.removeAttribute('style');\n\t\t\t\t$el.classList.toggle('act');\n\t\t\t\tif(type === 'position' && $this.windowWidth > $this.changePint){\n\t\t\t\t\tlet x = Math.floor(btnOffset.left - optionsOffset.left);\n\t\t\t\t\t$el.style.cssText = `transform:translate(${x}px, 30px)`;\n\t\t\t\t}else{\n\t\t\t\t\tthis.classList.toggle('act');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$this.popCloseBtns.forEach(function($btn){\n\t\t\t$btn.addEventListener('click', function(){\n\t\t\t\tlet target = this.dataset['target'];\n\t\t\t\tlet $el = $this.getEl(target);\n\n\t\t\t\t$el.removeAttribute('style');\n\t\t\t\t$el.classList.toggle('act');\n\t\t\t});\n\t\t});\n\n\t\tlet $linkCheckBtn = $this.getEl($this.popLinkName + ' .btn_check');\n\t\tif($linkCheckBtn !== false){\n\t\t\t$linkCheckBtn.addEventListener('click', function(){\n\t\t\t\tlet json = {};\n\t\t\t\tlet $viewEl = $this.getEl($this.popLinkName + ' .view');\n\t\t\t\tlet $submitBtn = $this.getEl($this.popLinkName + ' .btn_submit');\n\t\t\t\tlet url = $this.getEl($this.popLinkName + ' .url').value;\n\n\t\t\t\tif($this.urlReg.test(url) === true){\n\t\t\t\t\tjson.url = url;\n\t\t\t\t\tfetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tif (response.ok) return response.json();\n\t\t\t\t\t\tthrow new Error('Network response was not ok.')\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tlet contents = data.contents;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(contents !== null){\n\t\t\t\t\t\t\tlet regTitleCheck = new RegExp('property=\\\\\"og:title\\\\\"', 'g');\n\t\t\t\t\t\t\tlet regTitle01 = new RegExp('([^])*\\\\<title>([^\"]*)<\\\\/title>([^]*)', 'g');\n\t\t\t\t\t\t\tlet regTitle02 = new RegExp('([^])*\\\\<meta property=\\\\\"og:title\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n\t\t\t\t\t\t\tlet regImgCheck = new RegExp('property=\\\\\"og:image\\\\\"', 'g');\n\t\t\t\t\t\t\tlet regImg01 = new RegExp('([^])*\\\\<meta name=\\\\\"image\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n\t\t\t\t\t\t\tlet regImg02 = new RegExp('([^])*\\\\<meta property=\\\\\"og:image\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n\t\t\t\t\t\t\tlet regDecripCheck = new RegExp('property=\\\\\"og:description\\\\\"', 'g');\n\t\t\t\t\t\t\tlet regDecrip01 = new RegExp('([^])*\\\\<meta name=\\\\\"description\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n\t\t\t\t\t\t\tlet regDecrip02 = new RegExp('([^])*\\\\<meta property=\\\\\"og:description\\\\\" content=\\\\\"([^\"]*)\"\\\\>([^]*)', 'g');\n\n\t\t\t\t\t\t\tif(regTitleCheck.test(contents)){\n\t\t\t\t\t\t\t\tjson.title = contents.replace(regTitle02, '$2');\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tjson.title = contents.replace(regTitle01, '$2');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(regImgCheck.test(contents)){\n\t\t\t\t\t\t\t\tjson.img = contents.replace(regImg02, '$2');\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tlet img = contents.replace(regImg01, '$2');\n\n\t\t\t\t\t\t\t\tif(img.length > 500){\n\t\t\t\t\t\t\t\t\tjson.img = '';\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tjson.img = img;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(regDecripCheck.test(contents)){\n\t\t\t\t\t\t\t\tjson.description = contents.replace(regDecrip02, '$2');\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tlet description = contents.replace(regDecrip01, '$2');\n\n\t\t\t\t\t\t\t\tif(description.length > 500){\n\t\t\t\t\t\t\t\t\tjson.description = '';\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tjson.description = description;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(url.indexOf(\"://\") > -1){\n\t\t\t\t\t\t\t\tjson.domain = url.split('/')[2];\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tjson.domain = url.split('/')[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tjson.domain = json.domain.split(':')[0];\n\n\t\t\t\t\t\t\t$this.linkBoxData = json;\n\t\t\t\t\t\t\t$submitBtn.removeAttribute('disabled');\n\t\t\t\t\t\t\t$this.addLinkBox($viewEl, json, 'afterbegin');\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t$submitBtn.setAttribute('disabled', 'true');\n\t\t\t\t\t\t\t$viewEl.innerHTML = $this.messageNoData;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}else{\n\t\t\t\t\talert($this.messageWrongURL);\n\t\t\t\t}\n\t\t\t});\n\t\t}else{\n\t\t\tconsole.warn('We need link check button from ' + $this.popLinkName);\n\t\t}\n\n\t\t// delete content\n\t\t$this.contentDelBtn.addEventListener('click', function(){\n\t\t\tlet $target = $this.getEl('.lastset');\n\n\t\t\tif($target !== null){\n\t\t\t\t$target.remove();\n\t\t\t\t$this.popOptions.classList.remove('act');\n\t\t\t\tlet count = $this.contentArea.childElementCount;\n\n\t\t\t\tif(count === 1){\n\t\t\t\t\t$this.addTextBlock($this.contentArea, '', 'beforeend');\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\talert($this.messageNotSelect);\n\t\t\t}\n\t\t});\n\n\t\t// font size\n\t\t$this.fontSizeSelect.addEventListener('change', function(){\n\t\t\tlet value = this.value;\n\t\t\tlet $target = $this.activeElement;\n\t\t\tlet $el = $this.findContenteditable($target);\n\t\t\tlet className = $this.getClassName($el.classList.value, 'size');\n\n\t\t\tif(value === 'default'){\n\t\t\t\tif(className !== ''){\n\t\t\t\t\t$el.classList.remove(className);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(className !== ''){\n\t\t\t\t\t$el.classList.remove(className);\n\t\t\t\t}\n\t\t\t\t$el.classList.add(value);\n\t\t\t}\n\t\t});\n\n\t\t// color\n\t\t$this.btnColor.forEach(function($btn){\n\t\t\t$btn.addEventListener('click', function(){\n\t\t\t\tlet value = this.dataset['class'];\n\t\t\t\tlet list = ['I', 'B', 'S', 'U', 'A', 'SPAN'];\n\t\t\t\tlet $activeEl = $this.activeElement;\n\t\t\t\tlet tagName = $activeEl.tagName;\n\t\t\t\tlet $target = $this.findContenteditable($activeEl);\n\n\t\t\t\tif(window.getSelection().focusNode === window.getSelection().baseNode){\n\t\t\t\t\tif(list.indexOf(tagName) > 0){\n\t\t\t\t\t\tlet className = $this.getClassName($activeEl.classList.value, 'color');\n\n\t\t\t\t\t\tif(className !== ''){\n\t\t\t\t\t\t\t$activeEl.classList.remove(className);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(value !== 'default'){\n\t\t\t\t\t\t\t$activeEl.classList.add(value);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(tagName === 'SPAN'){\n\t\t\t\t\t\t\t\tlet text = $activeEl.textContent;\n\n\t\t\t\t\t\t\t\t$activeEl.insertAdjacentText('afterend', text);\n\t\t\t\t\t\t\t\t$activeEl.remove();\n\t\t\t\t\t\t\t\t$target.innerHTML = $target.innerHTML;\n\t\t\t\t\t\t\t\t$this.activeElement = $this.wrap;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$this.btnColorSelect.dataset['class'] = value;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlet className = $this.getClassName($target.classList.value, 'color');\n\n\t\t\t\t\t\tif($this.startTextCursor === $this.endTextCursor){\n\t\t\t\t\t\t\tif(className !== ''){\n\t\t\t\t\t\t\t\t$target.classList.remove(className);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(value !== 'default'){\n\t\t\t\t\t\t\t\t$target.classList.add(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$this.btnColorSelect.dataset['class'] = value;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t$this.wrapElement('color', null, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\talert($this.messageWrongNode);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// 텍스트 링크 추가\n\t\t$this.addLinkBtn.addEventListener('click', function(){\n\t\t\tlet url = $this.urlInput.value;\n\n\t\t\tif($this.urlReg.test(url) === true){\n\t\t\t\tlet isSameNode = $this.checkSameNode();\n\n\t\t\t\tif(isSameNode === true){\n\t\t\t\t\t$this.wrapElement('link', url);\n\t\t\t\t}else{\n\t\t\t\t\talert($this.messageWrongNode);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\talert($this.messageWrongURL);\n\t\t\t}\n\t\t});\n\n\t\t// remove link\n\t\t$this.unlinkBtn.addEventListener('click', function(){\n\t\t\tlet $target = $this.activeElement;\n\t\t\tlet $el = $this.findContenteditable($target);\n\t\t\tif($target.constructor.name === 'HTMLAnchorElement'){\n\t\t\t\tlet text = $target.textContent;\n\n\t\t\t\t$target.insertAdjacentText('afterend', text);\n\t\t\t\t$target.remove();\n\t\t\t\t$el.innerHTML = $el.innerHTML; // 내부 구조 초기화. (부셔진 node 단위 결합용)\n\t\t\t}else{\n\t\t\t\talrt($this.messageNotAnchorTag);\n\t\t\t}\n\t\t});\n\n\t\t// bold\n\t\t$this.boldBtn.addEventListener('click', function(){\n\t\t\t$this.makeTextDecoration('b', 'B', 'bold');\n\t\t});\n\n\t\t$this.italicBtn.addEventListener('click', function(){\n\t\t\t$this.makeTextDecoration('i', 'I', 'italic');\n\t\t});\n\n\t\t$this.underlineBtn.addEventListener('click', function(){\n\t\t\t$this.makeTextDecoration('u', 'U', 'underline');\n\t\t});\n\n\t\t$this.strikeBtn.addEventListener('click', function(){\n\t\t\t$this.makeTextDecoration('s', 'S', 'strike');\n\t\t});\n\n\t\t$this.wordblockBtn.addEventListener('click', function(){\n\t\t\tif(window.getSelection().focusNode === window.getSelection().baseNode){\n\t\t\t\tlet $target = $this.activeElement;\n\t\t\t\tlet elName = $target.tagName;\n\t\t\t\tlet $el = $this.findContenteditable($target);\n\t\t\t\tlet text = $target.textContent;\n\n\t\t\t\tif(elName === 'CODE'){\n\t\t\t\t\t$target.insertAdjacentText('afterend', text);\n\t\t\t\t\t$target.remove();\n\t\t\t\t\t$el.innerHTML = $el.innerHTML; // 내부 구조 초기화. (부셔진 node 단위 결합용)\n\t\t\t\t\t$this.activeElement = $this.wrap;\n\t\t\t\t}else{\n\t\t\t\t\t$this.wrapElement('wordblock');\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\talert($this.messageWrongNode);\n\t\t\t}\n\t\t});\n\n\n\t\t// image width\n\t\t$this.widthInput.addEventListener('keyup', function(e){\n\t\t\tif(e.key === 'Enter'){\n\t\t\t\tlet value = this.value;\n\t\t\t\tlet $el = $this.getEl('.lastset .img');\n\t\t\t\tlet massage = $this.messageExceedSize.replace('[size]', $this.maxImageWidth);\n\n\t\t\t\tif($el !== false){\n\t\t\t\t\tif($this.numberReg.test(value)){\n\t\t\t\t\t\tif(value <= $this.maxImageWidth){\n\t\t\t\t\t\t\t$el.setAttribute('width', value);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\talert(massage);\n\t\t\t\t\t\t\tthis.value = $this.maxImageWidth;\n\t\t\t\t\t\t\t$el.setAttribute('width', $this.maxImageWidth);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet offset = $this.getEl('.lastset').getBoundingClientRect();\n\t\t\t\t\t\t$this.openOptionPop(offset, 'img');\n\t\t\t\t\t}else{\n\t\t\t\t\t\talert($this.messageWrongValue);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\talert($this.messageNotSelecImage);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// codepen height\n\t\t$this.heightInput.addEventListener('keyup', function(e){\n\t\t\tif(e.key === 'Enter'){\n\t\t\t\tlet value = this.value;\n\t\t\t\tlet $el = $this.getEl('.lastset .iframe');\n\t\t\t\tlet massage = $this.messageExceedSize.replace('[size]', $this.maxCodepenHeight);\n\t\t\t\t\n\t\t\t\tif($el !== false){\n\t\t\t\t\tif($this.numberReg.test(value)){\n\t\t\t\t\t\tif(value <= $this.maxCodepenHeight){\n\t\t\t\t\t\t\t$el.setAttribute('height', value);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\talert(massage);\n\t\t\t\t\t\t\tthis.value = $this.maxCodepenHeight;\n\t\t\t\t\t\t\t$el.setAttribute('height', $this.maxCodepenHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet offset = $this.getEl('.lastset').getBoundingClientRect();\n\t\t\t\t\t\t$this.openOptionPop(offset, 'codepen');\n\t\t\t\t\t}else{\n\t\t\t\t\t\talert($this.messageWrongValue);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\talert($this.messageNotSelecCodepen);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// list type\n\t\t$this.listTypeSelect.addEventListener('change', function(){\n\t\t\tlet value = this.value;\n\t\t\tlet $el = $this.getEl('.lastset');\n\n\t\t\tif($el !== false){\n\t\t\t\t$el.setAttribute('type', value);\n\t\t\t}\n\t\t});\n\n\t\t// col size\n\t\t$this.colSizeSelect.addEventListener('change', function(){\n\t\t\tlet value = this.value;\n\t\t\tlet elName = $this.activeElement.constructor.name\n\t\t\tlet $el = $this.getEl('.lastset');\n\n\t\t\tif((elName === 'HTMLTableCellElement' || elName === 'HTMLTableCaptionElement') && $el !== false){\n\t\t\t\tlet x = parseInt($this.activeElement.dataset['x']) +1\n\t\t\t\tlet col = $el.querySelector(`col:nth-child(${x})`);\n\t\t\t\tlet className = $this.getClassName(col.classList.value, 'size');\n\n\t\t\t\tcol.classList.remove(className);\n\t\t\t\tcol.classList.add(value);\n\t\t\t}\n\t\t});\n\n\t\t// codeblock theme\n\t\t$this.themeSelect.addEventListener('change', function(){\n\t\t\tlet value = this.value;\n\t\t\tlet $el = $this.getEl('.lastset');\n\n\t\t\tif($el !== false){\n\t\t\t\t$el.dataset['theme'] = value;\n\t\t\t}\n\t\t});\n\n\t\t// codeblock language\n\t\t$this.languageSelect.addEventListener('change', function(){\n\t\t\tlet value = this.value;\n\t\t\tlet $el = $this.getEl('.lastset');\n\n\t\t\tif($el !== false){\n\t\t\t\tlet code = $el.childNodes[0];\n\n\t\t\t\t$el.dataset['lang'] = value;\n\t\t\t\tcode.classList.value = '';\n\t\t\t\tcode.classList.add(value);\n\t\t\t\thljs.highlightBlock(code);\n\t\t\t}\n\t\t});\n\n\t\t// ctable td / th change\n\t\t$this.changeThBtn.addEventListener('click', function(){\n\t\t\t$this.changeCell('th');\n\t\t});\n\n\t\t$this.changeTdBtn.addEventListener('click', function(){\n\t\t\t$this.changeCell('td');\n\t\t});\n\n\t\t// text align\n\t\t$this.textAlgin.forEach(function(item){\n\t\t\titem.addEventListener('click', function(){\n\t\t\t\tlet type = this.dataset['value'];\n\t\t\t\tlet $target = $this.findContenteditable($this.activeElement) === false ? $this.findParent($this.activeElement, 'item') : $this.findContenteditable($this.activeElement);\n\t\t\t\tlet className = $this.getClassName($target.classList.value, 'align');\n\n\t\t\t\tif(className !== ''){\n\t\t\t\t\t$target.classList.remove(className);\n\t\t\t\t}\n\t\t\t\t$target.classList.add(type);\n\t\t\t});\n\t\t});\n\n\t\t// url change\n\t\t$this.changeUrlBtn.addEventListener('click', function(){\n\t\t\tlet url = $this.urlInput.value;\n\t\t\tlet $el = $this.getEl('.lastset');\n\t\t\tlet type = $el.dataset['type'];\n\n\t\t\tswitch(true){ // not default\n\t\t\t\tcase $this.urlReg.test(url) === false :\n\t\t\t\t\talert($this.messageWrongURL);\n\t\t\t\tbreak;\n\t\t\t\tcase $el === undefined :\n\t\t\t\t\talert($this.messageNotSelect);\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'youtube' :\n\t\t\t\t\tif($this.youtubeReg.test(url)){\n\t\t\t\t\t\tlet video = $el.querySelector('.video');\n\t\t\t\t\t\tvideo.setAttribute('src', url);\n\t\t\t\t\t}else{\n\t\t\t\t\t\talert($this.messageWrongUrlType);\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'codepen' :\n\t\t\t\t\tif($this.codepenReg.test(url)){\n\t\t\t\t\t\tlet iframe = $el.querySelector('.iframe');\n\t\t\t\t\t\tiframe.setAttribute('src', url);\n\t\t\t\t\t}else{\n\t\t\t\t\t\talert($this.messageWrongUrlType);\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'btn' :\n\t\t\t\t\tlet btnValue = $el.dataset['value'];\n\n\t\t\t\t\tif(btnValue === 'youtube'){\n\t\t\t\t\t\t$this.addYoutube($el, url);\n\t\t\t\t\t\t$el.remove();\n\t\t\t\t\t\t$this.activeElement = $this.contentArea;\n\t\t\t\t\t}else if(btnValue === 'codepen'){\n\t\t\t\t\t\t$this.addCodepen($el, url);\n\t\t\t\t\t\t$el.remove();\n\t\t\t\t\t\t$this.activeElement = $this.contentArea;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t// 파일 업로드\n\t\t$this.fileInput.addEventListener('change', function(){\n\t\t\tlet contentArea = $this.contentArea;\n\t\t\tlet file = this.files;\n\t\t\tlet form = new FormData();\n\t\t\tlet type = this.dataset['type'];\n\t\t\tlet article_idx = contentArea.dataset['idx'];\n\t\t\tlet temp_idx = contentArea.dataset['tempIdx'];\n\n\t\t\tform.append('request_ype', 'upload');\n\t\t\tform.append('file_type', type);\n\t\t\tfor(let item of file){\n\t\t\t\tform.append('file[]', item);\n\t\t\t}\n\t\t\tform.append('article_idx', article_idx);\n\t\t\tform.append('temp_idx', temp_idx);\n\n\t\t\t// ajax\n\t\t\t$this.ajax('post', $this.mediaUploadURL, form, 'form', (result) => {\n\t\t\t\tif(result['result'] === true){\n\t\t\t\t\tlet $el = $this.getEl('.lastset') === false ? $this.getEl(`${$this.contentAreaName} > *:nth-last-child(1)`) : $this.getEl('.lastset');\n\t\t\t\t\tlet imgList = result['list'];\n\t\t\t\t\tlet html = '';\n\n\t\t\t\t\tfor(let item of imgList){\n\t\t\t\t\t\tlet webp = item['webp'] === 'y' ? true : false;\n\t\t\t\t\t\thtml += $this.HTMLMediaRow.replace(/\\[idx\\]/g, item['idx'])\n\t\t\t\t\t\t\t.replace('[webp]', webp)\n\t\t\t\t\t\t\t.replace('[height]', item['height'])\n\t\t\t\t\t\t\t.replace('[width]', item['width'])\n\t\t\t\t\t\t\t.replace('[src]', `${item['src']}${item['name']}.${item['format']}`)\n\t\t\t\t\t\t\t.replace('[alt]', item['alt'])\n\t\t\t\t\t\t\t.replace('[name]', item['alt']);\n\n\t\t\t\t\t\t$this.addImage($el, {\n\t\t\t\t\t\t\t'idx' : item['idx'],\n\t\t\t\t\t\t\t'src' : `${item['src']}${item['name']}`,\n\t\t\t\t\t\t\t'webp' : webp,\n\t\t\t\t\t\t\t'format' : item['format'],\n\t\t\t\t\t\t\t'alt' : item['alt'],\n\t\t\t\t\t\t\t'width' : item['width'],\n\t\t\t\t\t\t\t'height' : item['height']\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif($el.classList.contains('btn')){\n\t\t\t\t\t\t$el.remove();\n\t\t\t\t\t}\n\t\t\t\t\t$this.mediaList.insertAdjacentHTML('beforeend', html);\n\t\t\t\t\t$this.popMedia.classList.add('act');\n\t\t\t\t\tthis.value = '';\n\t\t\t\t}else{\n\t\t\t\t\talert(result['message']);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// add media\n\t\t$this.addMediaListBtn.addEventListener('click', function(){\n\t\t\t$this.fileInput.dataset['type'] = 'image';\n\t\t\t$this.fileInput.setAttribute('accept', 'image/*');\n\t\t\t$this.fileInput.click();\n\t\t});\n\n\t\t// media content\n\t\t$this.popMedia.addEventListener('click', function(e){\n\t\t\tlet $target = e.target;\n\t\t\tlet row = $this.findParent($target, 'btn_add_media');\n\t\t\tlet $p = this.querySelector('*[contenteditable]');\n\t\t\tlet data;\n\t\t\t\n\t\t\tswitch($target.tagName){\n\t\t\t\tcase 'IMG' : \n\t\t\t\t\tlet src = $target.getAttribute('src');\n\t\t\t\t\tlet $el = $this.getEl('.lastset') === false ? $this.getEl(`${$this.contentAreaName} > *:nth-last-child(1)`) : $this.getEl('.lastset');\n\n\t\t\t\t\tdata = {\n\t\t\t\t\t\t'width' : $target.getAttribute('width'),\n\t\t\t\t\t\t'height' : $target.dataset['height'],\n\t\t\t\t\t\t'webp' : row.dataset['webp'],\n\t\t\t\t\t\t'alt' : row.querySelector('.name').textContent,\n\t\t\t\t\t\t'src' : src.replace($this.srcReg, '$1'),\n\t\t\t\t\t\t'format' : src.replace($this.srcReg, '$2')\n\t\t\t\t\t}\n\n\t\t\t\t\t$this.addImage($el, data);\n\t\t\t\tbreak;\n\t\t\t\tcase 'P' : \n\t\t\t\t\tif($p !== null){\n\t\t\t\t\t\trow = $this.findParent($p, 'btn_add_media');\n\t\t\t\t\t\t$p.removeAttribute('contenteditable');\n\t\t\t\t\t\tdata = {\n\t\t\t\t\t\t\t'idx' : row.dataset['idx'],\n\t\t\t\t\t\t\t'textContent' : $p.textContent\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t//ajax\n\t\t\t\t\t\t$this.ajax('post', $this.mediaUpdateURL, data, 'json', function(result){\n\t\t\t\t\t\t\tif(result['result'] === true){\n\t\t\t\t\t\t\t\tlet src = row.querySelector('.img').getAttribute('src');\n\t\t\t\t\t\t\t\t$this.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n\t\t\t\t\t\t\t\t\titem.setAttribute('alt', $p.textContent);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\talert(result['message']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t$target.setAttribute('contenteditable', true);\n\t\t\t\t\t$target.focus();\n\t\t\t\tbreak;\n\t\t\t\tcase 'BUTTON' : \n\t\t\t\t\tif($target.classList.contains($this.addMediaListBtnName.substring(1)) === false){\n\t\t\t\t\t\tlet idx = row.dataset['idx'];\n\t\t\t\t\t\tlet message = confirm($this.messageDelImage);\n\t\t\t\t\t\t//'작성중인 내용 안의 이미지도 전부 삭제됩니다.\\n정말로 삭제하시겠습니까?'\n\n\t\t\t\t\t\tif(message === true){\n\t\t\t\t\t\t\t//ajax\n\t\t\t\t\t\t\t$this.ajax('delete', `${$this.mediaDelURL}/${idx}`, [], 'form', function(result){\n\t\t\t\t\t\t\t\tif(result['result'] === true){\n\t\t\t\t\t\t\t\t\tlet src = row.querySelector('.img').getAttribute('src');\n\t\t\t\t\t\t\t\t\t$this.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n\t\t\t\t\t\t\t\t\t\titem.remove();\n\t\t\t\t\t\t\t\t\t\trow.remove();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\talert(result['message']);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tif($p !== null){\n\t\t\t\t\t\trow = $this.findParent($p, 'btn_add_media');\n\t\t\t\t\t\tdata = {\n\t\t\t\t\t\t\t'idx' : row.dataset['idx'],\n\t\t\t\t\t\t\t'textContent' : $p.textContent\n\t\t\t\t\t\t};\n\t\t\t\t\t\t$p.removeAttribute('contenteditable');\n\n\t\t\t\t\t\t//ajax\n\t\t\t\t\t\t$this.ajax('post', $this.mediaUpdateURL, data, 'json', function(result){\n\t\t\t\t\t\t\tif(result['result'] === true){\n\t\t\t\t\t\t\t\tlet src = row.querySelector('.img').getAttribute('src');\n\t\t\t\t\t\t\t\t$this.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n\t\t\t\t\t\t\t\t\titem.setAttribute('alt', $p.textContent);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\talert(result['message']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$this.popMedia.addEventListener('keydown', function(e){\n\t\t\tif(e.key === 'Enter'){\n\t\t\t\te.preventDefault();\n\t\t\t\tlet row = $this.findParent(e.target, 'btn_add_media');\n\t\t\t\tlet textContent = e.target.textContent;\n\t\t\t\tlet data = {\n\t\t\t\t\t'idx' : row.dataset['idx'],\n\t\t\t\t\t'textContent' : textContent\n\t\t\t\t};\n\n\t\t\t\t//ajax\n\t\t\t\t$this.ajax('post', $this.mediaUpdateURL, data, 'json', function(result){\n\t\t\t\t\tif(result['result'] === true){\n\t\t\t\t\t\tlet src = row.querySelector('.img').getAttribute('src');\n\t\t\t\t\t\t$this.contentArea.querySelectorAll(`*[src=\"${src}\"]`).forEach(function(item){\n\t\t\t\t\t\t\titem.setAttribute('alt', $p.textContent);\n\t\t\t\t\t\t});\n\t\t\t\t\t}else{\n\t\t\t\t\t\talert(result['message']);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\te.target.removeAttribute('contenteditable');\n\t\t\t}\n\t\t});\n\n\t\t$this.languageChangeBtn.forEach(function(btn){\n\t\t\tbtn.addEventListener('click', function(){\n\t\t\t\tlet prevLang = $this.langStatus;\n\t\t\t\tlet contentData = $this.getJsonData();\n\t\t\t\tlet lang = this.dataset['value'];\n\t\t\t\tlet jsonData = $this.contentData[lang];\n\t\t\t\t$this.langStatus = lang;\n\n\t\t\t\t$this.languageChangeBtn.forEach(function(btn){\n\t\t\t\t\tbtn.classList.remove('act');\n\t\t\t\t});\n\t\t\t\tthis.classList.add('act');\n\n\t\t\t\tif(jsonData.length > 0){\n\t\t\t\t\t$this.setContent(jsonData);\n\t\t\t\t}else{\n\t\t\t\t\tlet message = confirm($this.messageDuplicateContent);\n\n\t\t\t\t\tif(message === true){\n\t\t\t\t\t\t$this.setContent(contentData[prevLang]);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$this.setContent([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\" : \"title\",\n\t\t\t\t\t\t\t\t\"class\" : [\"title\"],\n\t\t\t\t\t\t\t\t\"textContent\" : \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\" : \"text\",\n\t\t\t\t\t\t\t\t\"class\" : [\"item\"],\n\t\t\t\t\t\t\t\t\"textContent\" : \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t}\n\n\tchangeCell(changeTagName){\n\t\tlet $target = this.activeElement;\n\t\tlet tagName = $target.tagName;\n\n\t\tif(tagName !== changeTagName.toUpperCase()){\n\t\t\tlet x = $target.dataset['x'];\n\t\t\tlet y = $target.dataset['y'];\n\n\t\t\t$target.insertAdjacentHTML('afterend', `<${changeTagName} contenteditable=\"true\" data-x=\"${x}\" data-y=\"${y}\"></${changeTagName}>`);\n\t\t\tthis.activeElement = $target.nextElementSibling;\n\t\t\t$target.nextElementSibling.focus();\n\t\t\t$target.remove();\n\t\t}\n\t}\n\n\tcheckOptionElement(name, defaultName, type = 'single'){\n\t\tlet $item;\n\t\tif(type ===  'single'){\n\t\t\t$item = typeof name !== 'string' ? this.getEl(defaultName) : this.getEl(name);\n\t\t}else{\n\t\t\t$item = typeof name !== 'string' ? this.getElList(defaultName) : this.getElList(name);\n\t\t}\n\n\t\tif($item === false){\n\t\t\tconsole.error('Can not find Element : ' + name);\n\t\t}else{\n\t\t\treturn $item;\n\t\t}\n\t}\n\n\tgetEl(name){\n\t\tlet $el = document.querySelector(name);\n\n\t\tif($el === null){\n\t\t\treturn false;\n\t\t}else{\n\t\t\treturn $el;\n\t\t}\n\t}\n\n\tgetElList(name){\n\t\tlet $el = document.querySelectorAll(name);\n\n\t\tif($el.length < 1){\n\t\t\treturn false;\n\t\t}else{\n\t\t\treturn $el;\n\t\t}\n\t}\n\n\tfindParent($el, name){\n\t\tif($el.constructor.name !== 'HTMLBodyElement' && $el.constructor.name !== 'HTMLHtmlElement'){\n\t\t\tlet check = $el.classList.contains(name);\n\n\t\t\tif(check === true){\n\t\t\t\treturn $el;\n\t\t\t}else{\n\t\t\t\treturn this.findParent($el.parentElement, name);\n\t\t\t}\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfindContenteditable(node){\n\t\tlet constructorName = node.constructor.name;\n\t\tlet target;\n\n\t\tif(constructorName !== 'HTMLBodyElement'){\n\t\t\tif(constructorName === 'Text'){\n\t\t\t\ttarget = node.parentElement;\n\t\t\t}else{\n\t\t\t\ttarget = node;\n\t\t\t}\n\n\t\t\tlet hasAttr = target.getAttribute('contenteditable');\n\t\t\tif(hasAttr === 'true'){\n\t\t\t\treturn target;\n\t\t\t}else{\n\t\t\t\treturn this.findContenteditable(target.parentElement);\n\t\t\t}\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tcloseLoding(){\n\t\tthis.popBgArea.classList.remove('act');\n\t\tthis.lodingArea.classList.remove('act');\n\t}\n\n\tremoveLastsetClass($target){\n\t\tif($target.classList.contains('lastset') === true){\n\t\t\t$target.classList.remove('lastset');\n\t\t}\n\t}\n\n\taddTextBlock($target, content = '', position = 'afterend'){\n\t\tthis.removeLastsetClass($target);\n\n\t\tlet html = this.HTMLTextBlock.replace('[content]', content);\n\n\t\t$target.insertAdjacentHTML(position, html);\n\t\t$target.nextElementSibling.focus();\n\t}\n\n\taddBtn($target, icon, type, text){\n\t\tthis.removeLastsetClass($target);\n\t\tlet html = this.HTMLBtn.replace(/\\[icon_id\\]/g, icon)\n\t\t\t\t\t.replace(/\\[type\\]/g, type)\n\t\t\t\t\t.replace(/\\[text\\]/g, text);\n\n\t\t$target.insertAdjacentHTML('afterend', html);\n\t}\n\n\taddSticker($target, sticker){\n\t\tthis.removeLastsetClass($target);\n\t\tlet html = this.HTMLsticker.replace('[el]', sticker.innerHTML);\n\t\t$target.insertAdjacentHTML('afterend', html);\n\t}\n\n\taddList($target, tag, type = null, content = ''){\n\t\tthis.removeLastsetClass($target);\n\t\tlet dataType;\n\t\tif(tag === 'ol'){\n\t\t\tdataType = 'list_o';\n\t\t}else{\n\t\t\tdataType = 'list_u';\n\t\t}\n\t\tlet attribute = type === null ? '' : 'type=\"'+ type +'\"';\n\t\tlet child = this.HTMLChildList.replace(/\\[content\\]/g, content);\n\t\tlet html = this.HTMLList.replace(/\\[tag\\]/g, tag)\n\t\t\t\t\t.replace('[dataType]', dataType)\n\t\t\t\t\t.replace('[type]', attribute)\n\t\t\t\t\t.replace('[child]', child);\n\n\t\t$target.insertAdjacentHTML('afterend', html);\n\t\t$target.nextElementSibling.children[0].focus();\n\t}\n\n\taddQuote($target){\n\t\tthis.removeLastsetClass($target);\n\t\t$target.insertAdjacentHTML('afterend', this.HTMLQuote);\n\t\t$target.nextElementSibling.children[0].focus();\n\t}\n\n\taddTable($target){\n\t\tthis.removeLastsetClass($target);\n\t\t$target.insertAdjacentHTML('afterend', this.HTMLTable);\n\t\t$target.nextElementSibling.querySelector('caption').focus();\n\t}\n\n\taddCodeBlock($target){\n\t\tthis.removeLastsetClass($target);\n\t\t$target.insertAdjacentHTML('afterend', this.HTMLCodeBlock);\n\t\t$target.nextElementSibling.children[0].focus();\n\t}\n\n\taddLinkBox($target, data, position = 'afterend'){\n\t\tthis.removeLastsetClass($target);\n\t\tif(data.img === ''){\n\t\t\tdata.img = './common/img/img_cover.png';\n\t\t}\n\t\tlet html = this.HTMLLinkBox.replace('[url]', data.url)\n\t\t\t\t\t.replace('[imgSrc]', data.img)\n\t\t\t\t\t.replace('[title]', data.title)\n\t\t\t\t\t.replace('[description]', data.description)\n\t\t\t\t\t.replace('[domain]', data.domain);\n\n\t\t$target.insertAdjacentHTML(position, html);\n\t}\n\n\taddImage($target, data, position = 'afterend'){\n\t\tthis.removeLastsetClass($target);\n\t\tlet html;\n\t\tlet width;\n\n\t\tif(((100 / data.width) * data.height) > 100){\n\t\t\twidth = 300;\n\t\t}else{\n\t\t\twidth = data.width;\n\t\t}\n\n\t\tif(width > this.maxImageWidth){\n\t\t\twidth = this.maxImageWidth;\n\t\t}\n\n\t\tif(this.useWebp === true == true){\n\t\t\thtml = this.HTMLImageType01.replace('[src]', `${data.src}.${data.format}`)\n\t\t\t\t\t.replace('[alt]', data.alt)\n\t\t\t\t\t.replace('[width]', width);\n\n\t\t\tif(data.webp === true){\n\t\t\t\tlet source = this.HTMLImageSource.replace('[webp]', `${data.src}.webp`);\n\t\t\t\thtml = html.replace('[source]', source);\n\t\t\t}else{\n\t\t\t\thtml = html.replace('[source]', '');\n\t\t\t}\n\t\t}else{\n\t\t\thtml = this.HTMLImageType02.replace('[src]', `${data.src}.${data.format}`)\n\t\t\t\t.replace('[alt]', data.alt)\n\t\t\t\t.replace('[width]', width);\n\t\t}\n\n\t\t$target.insertAdjacentHTML(position, html);\n\t}\n\n\taddYoutube($target, src, position = 'afterend'){\n\t\tthis.removeLastsetClass($target);\n\t\tlet code = src.replace(this.youtubeCodeReg, '$7');\n\t\tlet html = this.HTMLYoutube.replace('[src]', `https://www.youtube.com/embed/${code}`);\n\t\t$target.insertAdjacentHTML(position, html);\n\t}\n\n\taddCodepen($target, src, position = 'afterend', height = 300){\n\t\tthis.removeLastsetClass($target);\n\t\tlet nickname = src.replace(this.codepenCodeReg, '$2');\n\t\tlet code = src.replace(this.codepenCodeReg, '$4');\n\t\tlet html = this.HTMLCodepen.replace('[src]', `https://codepen.io/${nickname}/embed/${code}?height=${height}&theme-id=${this.codepenTheme}&default-tab=result`).replace('[height]', height);\n\t\t$target.insertAdjacentHTML(position, html);\n\t}\n\n\tgetLastSetOrFocus($target){\n\t\tlet $activeEl = document.activeElement;\n\t\tlet $item, $btn = false;\n\n\t\tif($activeEl.constructor.name !== 'HTMLBodyElement'){\n\t\t\tswitch(this.activeElement.constructor.name){\n\t\t\t\tcase 'HTMLSpanElement' :\n\t\t\t\t\t$item = this.activeElement;\n\t\t\t\tbreak;\n\t\t\t\tcase 'HTMLElement' :\n\t\t\t\t\t$item = this.activeElement;\n\t\t\t\tbreak;\n\t\t\t\tcase 'HTMLAnchorElement' :\n\t\t\t\t\t$item = this.activeElement;\n\t\t\t\tbreak;\n\t\t\t\tcase 'Text' :\n\t\t\t\t\t$item = this.findParent(this.activeElement.parentElement, 'item');\n\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\t$item = this.findParent(this.activeElement, 'item');\n\t\t\t}\n\t\t}else{\n\t\t\t$item = this.findParent($target, 'item');\n\t\t\t$btn = $item === false ? this.findParent($target, 'btn') : $item;\n\t\t}\n\t\tlet $el = $item === false ? $btn : $item;\n\t\treturn $el;\n\t}\n\n\tsetLastElement($target, children){\n\t\tlet $item = this.findParent($target, 'item') === false ? this.findParent($target, 'btn') : this.findParent($target, 'item');\n\t\tchildren.forEach(function($child){\n\t\t\t$child.classList.remove('lastset');\n\t\t});\n\t\t$item.classList.add('lastset');\n\t}\n\n\topenOptionPop(offset, type){\n\t\tlet y = Math.floor(offset.top + offset.height);\n\t\tlet $child = this.popOptions.querySelectorAll('.col');\n\t\tlet typeReg = new RegExp(type, 'i');\n\n\t\tif($child !== null){\n\t\t\t$child.forEach(function($col){\n\t\t\t\tlet type = $col.dataset['group'];\n\n\t\t\t\tswitch(true){\n\t\t\t\t\tcase type === 'all' :\n\t\t\t\t\t\t$col.classList.add('act');\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase typeReg.test(type) === true :\n\t\t\t\t\t\t$col.classList.add('act');\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase typeReg.test(type) === false :\n\t\t\t\t\t\t$col.classList.remove('act');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.popOptions.classList.add('act');\n\t\tthis.popOptions.querySelector('.pop').classList.remove('act');\n\t\tlet x =  Math.floor((this.windowWidth - this.popOptions.getBoundingClientRect().width) / 2);\n\t\tif(this.windowWidth > this.changePint){\n\t\t\tthis.popOptions.style.cssText = 'transform:translate('+ x +'px, '+ y +'px)';\n\t\t}else{\n\t\t\tthis.popOptions.removeAttribute('style');\n\t\t}\n\t}\n\n\tcontentCheckByMouse(target, eventType){\n\t\tif(eventType === 'click'){\n\t\t\tthis.activeElement = target;\n\t\t}\n\t\tlet $target = this.getLastSetOrFocus(target);\n\t\tlet base = window.getSelection().baseOffset;\n\t\tlet extent = window.getSelection().extentOffset;\n\n\t\tif($target !== false){\n\t\t\tlet offset = $target.getBoundingClientRect();\n\t\t\tlet type = $target.dataset['type'];\n\t\t\tlet $children = this.getElList(this.contentAreaName + ' > *');\n\t\t\tlet isBtn = $target.classList.contains('btn');\n\n\t\t\tswitch(true){\n\t\t\t\tcase $target.tagName === 'CODE' && $target.parentElement.tagName === 'PRE' :\n\t\t\t\t\ttype = 'codeblock';\n\t\t\t\tbreak;\n\t\t\t\tcase $target.constructor.name === 'HTMLElement' && $target.classList.contains('wordblock') :\n\t\t\t\t\ttype = 'wordblock';\n\t\t\t\tbreak;\n\t\t\t\tcase $target.constructor.name === 'HTMLAnchorElement' :\n\t\t\t\t\ttype = 'link';\n\t\t\t\tbreak;\n\t\t\t\tcase isBtn === true && eventType === 'click' :\n\t\t\t\t\tif(typeof $target.dataset['value'] !== 'undefined'){\n\t\t\t\t\t\tlet value = $target.dataset['value'];\n\t\t\t\t\t\tif(value === 'image'){\n\t\t\t\t\t\t\tthis.fileInput.dataset['type'] = 'image';\n\t\t\t\t\t\t\tthis.fileInput.setAttribute('accept', 'image/*');\n\t\t\t\t\t\t\tthis.fileInput.click();\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\ttype = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase window.getSelection().focusNode !== window.getSelection().baseNode :\n\t\t\t\t\ttype = 'text';\n\t\t\t\tbreak;\n\t\t\t\tcase base !== extent :\n\t\t\t\t\tif($target.tagName !== 'BLOCKQUOTE'){\n\t\t\t\t\t\tthis.focusNode = window.getSelection().focusNode;\n\t\t\t\t\t\tthis.baseNode = window.getSelection().baseNode;\n\t\t\t\t\t\tthis.startTextCursor = base;\n\t\t\t\t\t\tthis.endTextCursor = extent;\n\t\t\t\t\t\ttype = 'word';\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase type === undefined :\n\t\t\t\t\ttype = 'all';\n\t\t\t\tbreak;\n\t\t\t\tdefault : \n\t\t\t\t\ttype = type;\n\t\t\t}\n\n\t\t\tif(eventType === 'click'){\n\t\t\t\tthis.setLastElement($target, $children);\n\t\t\t\tthis.openOptionPop(offset, type);\n\t\t\t}else if(eventType === 'mouseover' && (type === 'youtube' || type === 'codepen')){\n\t\t\t\tthis.setLastElement($target, $children);\n\t\t\t\tthis.openOptionPop(offset, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckOptionsValue($el){\n\t\tlet $target = this.findParent($el, 'item');\n\t\t\t$target = $target === false ? this.findParent($el, 'btn') : $target;\n\t\tlet $activeEl = this.activeElement;\n\n\t\tif($target !== false){\n\t\t\tlet type = $target.dataset['type'];\n\t\t\tlet activeElName = $activeEl.constructor.name;\n\t\t\tlet targetClassList = $target.classList.value;\n\t\t\tlet activeClassList = $activeEl.classList.value;\n\n\t\t\tthis.urlInput.value = '';\n\t\t\tswitch(type){ // not default\n\t\t\t\tcase 'text' :\n\t\t\t\t\tlet colorClass = this.getClassName(targetClassList, 'color');\n\t\t\t\t\tlet sizeClass = this.getClassName(targetClassList, 'size');\n\n\t\t\t\t\tif(colorClass !== ''){\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = colorClass;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = 'default';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(sizeClass !== ''){\n\t\t\t\t\t\tthis.fontSizeSelect.value = sizeClass;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.fontSizeSelect.value = 'default';\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'image' :\n\t\t\t\t\tlet size = $target.querySelector('.img').getAttribute('width');\n\t\t\t\t\tthis.widthInput.value = size;\n\t\t\t\tbreak;\n\t\t\t\tcase 'youtube' :\n\t\t\t\t\tif($target.classList.contains('btn') === false){\n\t\t\t\t\t\tlet src = $target.querySelector('.video').getAttribute('src');\n\t\t\t\t\t\tthis.urlInput.value = src;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.urlInput.value = '';\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'codepen' :\n\t\t\t\t\tif($target.classList.contains('btn') === false){\n\t\t\t\t\t\tlet $el = $target.querySelector('.iframe');\n\t\t\t\t\t\tlet src = $el.getAttribute('src');\n\t\t\t\t\t\tlet height = $el.getAttribute('height');\n\t\t\t\t\t\tthis.urlInput.value = src;\n\t\t\t\t\t\tthis.heightInput.value = height;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.urlInput.value = '';\n\t\t\t\t\t\tthis.heightInput.value = '';\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'list_o' :\n\t\t\t\t\tlet listType = $target.getAttribute('type');\n\t\t\t\t\tthis.listTypeSelect.value = listType;\n\t\t\t\tbreak;\n\t\t\t\tcase 'codeblock' :\n\t\t\t\t\tlet theme = $target.dataset['theme'];\n\t\t\t\t\tlet lang = $target.dataset['lang'];\n\t\t\t\t\tlet codeSizeClass = this.getClassName(targetClassList, 'size');\n\n\t\t\t\t\tif(codeSizeClass !== ''){\n\t\t\t\t\t\tthis.fontSizeSelect.value = codeSizeClass;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.fontSizeSelect.value = 'default';\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.themeSelect.value = theme;\n\t\t\t\t\tthis.languageSelect.value = lang;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch(true){\n\t\t\t\tcase activeElName === 'HTMLAnchorElement' :\n\t\t\t\t\tlet url = $activeEl.getAttribute('href');\n\t\t\t\t\tthis.urlInput.value = url;\n\t\t\t\tbreak;\n\t\t\t\tcase (activeElName === 'HTMLTableCellElement' || activeElName === 'HTMLTableCaptionElement') && $target.dataset['type'] === 'table':\n\t\t\t\t\tif(activeElName === 'HTMLTableCellElement'){\n\t\t\t\t\t\tlet colNumber = parseInt($activeEl.dataset['x']) + 1;\n\t\t\t\t\t\tlet tableClass = $target.querySelector('col:nth-child('+ colNumber +')').classList.value;\n\t\t\t\t\t\tthis.colSizeSelect.value = this.getClassName(tableClass, 'size');\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cellColor = this.getClassName(activeClassList, 'color');\n\t\t\t\t\tlet cellFront = this.getClassName(activeClassList, 'size');\n\n\t\t\t\t\tif(cellColor !== ''){\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = cellColor;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = 'default';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(cellFront !== ''){\n\t\t\t\t\t\tthis.fontSizeSelect.value = cellFront;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.fontSizeSelect.value = 'default';\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase activeElName === 'HTMLSpanElement' || activeElName === 'HTMLElement':\n\t\t\t\t\tlet className = this.getClassName(activeClassList, 'color');\n\n\t\t\t\t\tif(className !== ''){\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = className;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = 'default';\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase activeElName === 'HTMLLIElement' :\n\t\t\t\t\tlet colorClass = this.getClassName(activeClassList, 'color');\n\t\t\t\t\tlet sizeClass = this.getClassName(activeClassList, 'size');\n\n\t\t\t\t\tif(colorClass !== ''){\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = colorClass;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.btnColorSelect.dataset['class'] = 'default';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(sizeClass !== ''){\n\t\t\t\t\t\tthis.fontSizeSelect.value = sizeClass;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.fontSizeSelect.value = 'default';\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//console.log($target, $activeEl);\n\t\t}\n\t}\n\n\tgetClassName(text, type){\n\t\tif(this.classList.indexOf(type) >= 0){\n\t\t\tlet value = text.match(this.classReg[type]);\n\n\t\t\tif(text !== '' && value !== null){\n\t\t\t\treturn value[0];\n\t\t\t}else{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}else{\n\t\t\tconsole.warn(`You send wrong type name : [${type}]`);\n\t\t}\n\t}\n\n\tcheckSameNode(){\n\t\tif(this.focusNode === this.baseNode){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\twrapElement(type, url = null, className = null){\n\t\tlet text = this.focusNode.textContent;\n\t\tlet $el = this.findContenteditable(this.focusNode);\n\t\t$el.innerHTML = $el.innerHTML; // 내부 구조 초기화. (부셔진 node 단위 결합용)\n\t\tlet child = $el.childNodes;\n\t\tlet count = child.length;\n\t\tlet number, firstCursor, endCursor, code;\n\t\tlet html = '';\n\n\t\t// 노드 순서 구하기\n\t\tfor(let i = 0;i < count;i += 1){\n\t\t\tif(child[i].constructor.name === 'Text'){\n\t\t\t\tif(text === child[i].textContent){\n\t\t\t\t\tnumber = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(this.startTextCursor > this.endTextCursor){\n\t\t\tfirstCursor = this.endTextCursor;\n\t\t\tendCursor = this.startTextCursor;\n\t\t}else{\n\t\t\tfirstCursor = this.startTextCursor;\n\t\t\tendCursor = this.endTextCursor;\n\t\t}\n\n\t\tswitch(type){\n\t\t\tcase 'link' :\n\t\t\t\tcode = `${text.substring(0, firstCursor)}<a href=\"${url}\" rel=\"nofollow\">${text.substring(firstCursor, endCursor)}</a>${text.substring(endCursor)}`;\n\t\t\tbreak;\n\t\t\tcase 'bold' :\n\t\t\t\tcode = `${text.substring(0, firstCursor)}<b>${text.substring(firstCursor, endCursor)}</b>${text.substring(endCursor)}`;\n\t\t\tbreak;\n\t\t\tcase 'italic' :\n\t\t\t\tcode = `${text.substring(0, firstCursor)}<i>${text.substring(firstCursor, endCursor)}</i>${text.substring(endCursor)}`;\n\t\t\tbreak;\n\t\t\tcase 'underline' :\n\t\t\t\tcode = `${text.substring(0, firstCursor)}<u>${text.substring(firstCursor, endCursor)}</u>${text.substring(endCursor)}`;\n\t\t\tbreak;\n\t\t\tcase 'strike' :\n\t\t\t\tcode = `${text.substring(0, firstCursor)}<s>${text.substring(firstCursor, endCursor)}</s>${text.substring(endCursor)}`;\n\t\t\tbreak;\n\t\t\tcase 'wordblock' :\n\t\t\t\tcode = `${text.substring(0, firstCursor)}<code class=\"wordblock\">${text.substring(firstCursor, endCursor)}</code>${text.substring(endCursor)}`;\n\t\t\tbreak;\n\t\t\tcase 'color' :\n\t\t\t\tcode = `${text.substring(0, firstCursor)}<span class=\"${className}\">${text.substring(firstCursor, endCursor)}</span>${text.substring(endCursor)}`;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor(let j = 0;j < count;j += 1){\n\t\t\tif(j !== number){\n\t\t\t\tif(child[j].constructor.name === 'Text'){\n\t\t\t\t\thtml += child[j].textContent;\n\t\t\t\t}else{\n\t\t\t\t\thtml += child[j].outerHTML;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\thtml += code;\n\t\t\t}\n\t\t}\n\n\t\t$el.innerHTML = html;\n\t}\n\n\tmakeTextDecoration(tag, tagName, className){\n\t\tif(this.focusNode === this.baseNode){\n\t\t\tlet $target = this.activeElement;\n\t\t\tlet elName = $target.constructor.name;\n\t\t\tlet $el = this.findContenteditable($target);\n\t\t\tconsole.log($el, $target);\n\n\t\t\tif(elName === 'HTMLAnchorElement' || elName === 'HTMLSpanElement' || elName === 'HTMLElement'){\n\t\t\t\tlet classList = $target.classList;\n\t\t\t\tlet count = classList.length;\n\t\t\t\tlet text = $target.textContent;\n\n\t\t\t\tif($target.tagName === tagName){\n\t\t\t\t\tif(count > 0){\n\t\t\t\t\t\t$target.insertAdjacentHTML('afterend', `<span class=\"${classList.value}\">${text}</span>`);\n\t\t\t\t\t\tthis.activeElement = $target.nextElementSibling;\n\t\t\t\t\t\t$target.remove();\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$target.insertAdjacentText('afterend', text);\n\t\t\t\t\t\t$target.remove();\n\t\t\t\t\t\t$el.innerHTML = $el.innerHTML; // 내부 구조 초기화. (부셔진 node 단위 결합용)\n\t\t\t\t\t\tthis.activeElement = this.wrap;\n\t\t\t\t\t}\n\t\t\t\t}else if($target.tagName === 'SPAN'){\n\t\t\t\t\tif(count > 0){\n\t\t\t\t\t\t$target.insertAdjacentHTML('afterend', `<${tag} class=\"${classList.value}\">${text}</${tag}>`);\n\t\t\t\t\t\tthis.activeElement = $target.nextElementSibling;\n\t\t\t\t\t\t$target.remove();\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$target.insertAdjacentHTML('afterend', `<${tag}>${text}</${tag}>`);\n\t\t\t\t\t\tthis.activeElement = $target.nextElementSibling;\n\t\t\t\t\t\t$target.remove();\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif($target.classList.contains(className) === true){\n\t\t\t\t\t\t$target.classList.remove(className);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$target.classList.add(className);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(window.getSelection().focusOffset !== window.getSelection().baseOffset){\n\t\t\t\t\tthis.wrapElement(className);\n\t\t\t\t}else{\n\t\t\t\t\tif($target.classList.contains(className) === true){\n\t\t\t\t\t\t$target.classList.remove(className);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$target.classList.add(className);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\talert(this.messageWrongNode);\n\t\t}\n\t}\n\n\ttableConstrol($target){\n\t\tlet name = $target.constructor.name;\n\t\tlet classList = $target.classList;\n\n\t\tif(name === 'HTMLButtonElement'){\n\t\t\tlet table = document.querySelector('.lastset .item_table');\n\t\t\tlet colgroup = table.querySelector('colgroup');\n\t\t\tlet colCount = table.querySelectorAll('col').length;\n\t\t\tlet row = table.querySelectorAll('tr');\n\t\t\tlet tbody = table.querySelector('tbody');\n\n\t\t\tswitch(true){\n\t\t\t\tcase classList.contains('btn_col_add') :\n\t\t\t\t\trow.forEach(function(item){\n\t\t\t\t\t\tlet y = item.querySelector('*:nth-child(1)').dataset['y'];\n\n\t\t\t\t\t\titem.insertAdjacentHTML('beforeend', `<td contenteditable=\"true\" data-x=\"${colCount}\" data-y=\"${y}\"></td>`);\n\t\t\t\t\t});\n\t\t\t\t\tcolgroup.insertAdjacentHTML('beforeend', '<col class=\"size_100\">');\n\t\t\t\tbreak;\n\t\t\t\tcase classList.contains('btn_col_del') :\n\t\t\t\t\tif(colCount > 1){\n\t\t\t\t\t\tlet lastCol = colgroup.querySelector('*:last-child');\n\n\t\t\t\t\t\trow.forEach(function(item){\n\t\t\t\t\t\t\tlet lastChild = item.querySelector('*:last-child');\n\n\t\t\t\t\t\t\tlastChild.remove();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlastCol.remove();\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase classList.contains('btn_row_add') :\n\t\t\t\t\tlet html = '<tr>';\n\n\t\t\t\t\tfor(let i = 0;i < colCount;i += 1){\n\t\t\t\t\t\thtml += `<td contenteditable=\"true\" data-x=\"${i}\" data-y=\"${row.length}\"></td>`;\n\t\t\t\t\t}\n\t\t\t\t\thtml += '</tr>';\n\n\t\t\t\t\ttbody.insertAdjacentHTML('beforeend', html);\n\t\t\t\tbreak;\n\t\t\t\tcase classList.contains('btn_row_del') :\n\t\t\t\t\tif(row.length > 1){\n\t\t\t\t\t\ttbody.querySelector('tr:last-child').remove();\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tkeybroadControl(event){\n\t\tlet key = event.key;\n\t\tlet shift = event.shiftKey;\n\t\tlet $activeEl = document.activeElement.constructor.name === 'HTMLBodyElement' ? false : document.activeElement;\n\t\tlet $item = this.findParent($activeEl, 'item');\n\n\t\tif($activeEl !== false){\n\t\t\tthis.activeElement = document.activeElement;\n\t\t}\n\n\t\tswitch(true){\n\t\t\tcase key === 'Enter' && $activeEl !== false :\n\t\t\t\tlet tagName = $activeEl.tagName;\n\n\t\t\t\tif(shift !== true){\n\t\t\t\t\tif(tagName === 'LI'){\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\tlet text = $activeEl.textContent;\n\n\t\t\t\t\t\tif(text === ''){\n\t\t\t\t\t\t\tlet count = $item.querySelectorAll('li').length;\n\n\t\t\t\t\t\t\tthis.addTextBlock($item);\n\t\t\t\t\t\t\tif(count > 1){\n\t\t\t\t\t\t\t\t$activeEl.remove();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t$activeEl.insertAdjacentHTML('afterend', this.HTMLChildList.replace('[content]', ''));\n\t\t\t\t\t\t\t$activeEl.nextElementSibling.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tthis.addTextBlock($item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tbreak;\n\t\t\tcase key === 'Tab' && $activeEl !== false:\n\t\t\t\tif(shift === true){\n\t\t\t\t\tif($activeEl.classList.contains('title') === true){\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tlet $lastItem = this.contentArea.querySelector('.item:nth-last-child(1)');\n\t\t\t\t\tif($lastItem === $item){\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tsaveAction(){\n\n\t}\n\n\tactionPrev(){\n\n\t}\n\n\tactionNext(){\n\n\t}\n\n\tdragStartEvent(e, el){ // event function\n\t\tel.insertAdjacentHTML('afterend', this.HTMLPositionBar);\n\t}\n\n\tdragOverEvent(e, el){ // event function\n\t\tlet $bar = this.getElList('.position_bar');\n\t\tlet $target = this.findParent(e.target, 'item');\n\t\t\t$target = $target === false ? this.findParent(e.target, 'btn') : $target;\n\n\t\tif($bar !== false){\n\t\t\t$bar.forEach(function($item){\n\t\t\t\t$item.remove();\n\t\t\t});\n\t\t}\n\t\tif($target !== false){\n\t\t\t$target.insertAdjacentHTML('afterend', this.HTMLPositionBar);\n\t\t}\n\t\tconsole.log('move');\n\t}\n\n\tdragEndEvent(e, el){ // event function\n\t\tlet event = document.createEvent('HTMLEvents');\n\t\t\tevent.initEvent('mouseup', true, true);\n\t\t\tevent.eventName = 'mouseup';\n\t\tlet $bar = this.getEl('.position_bar');\n\t\tlet HTML = el.outerHTML;\n\n\n\t\tif($bar !== false){\n\t\t\t$bar.insertAdjacentHTML('afterend', HTML);\n\t\t\t$bar.remove();\n\t\t\tel.remove();\n\t\t}\n\t\tel.removeAttribute('draggable');\n\t\tthis.contentArea.dispatchEvent(event);\n\t}\n\n\tajax(method,url,data,type,fn){\n\t\tlet formData = new FormData();\n\t\tlet xmlhttp = new XMLHttpRequest();\n\t\n\t\tif(type === 'json'){\n\t\t\tfor(let key in data){\n\t\t\t\tformData.append(key, data[key]);\n\t\t\t}\n\t\n\t\t\tdata = formData;\n\t\t}\n\t\n\t\txmlhttp.open(method, url);\n\t\n\t\txmlhttp.onreadystatechange = function(){\n\t\t\tif(xmlhttp.readyState == XMLHttpRequest.DONE && xmlhttp.status === 200){\n\t\t\t\tlet httpData = xmlhttp.responseText;\n\t\t\t\tlet item = JSON.parse(httpData);\n\t\t\t\tfn(item);\n\t\t\t}\n\t\t}\n\t\n\t\txmlhttp.send(data);\n\t}\n\n\tgetJsonData(){\n\t\tlet childNodes = this.getElList(`${this.contentAreaName} > *`);\n\t\tlet arr = [];\n\n\t\tchildNodes.forEach((item) => {\n\t\t\tlet type = item.dataset['type'];\n\n\t\t\tswitch(true){\n\t\t\t\tcase type === 'title' :\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'title',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'textContent' : item.textContent\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'text' :\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'text',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'textContent' : item.innerHTML\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'image' :\n\t\t\t\t\tlet hasWebp = item.tagName === 'PICTURE' ? true : false;\n\t\t\t\t\tlet img = item.querySelector('.img');\n\t\t\t\t\tlet link = img.getAttribute('src');\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'image',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'hasWebp' : hasWebp,\n\t\t\t\t\t\t'size' : img.getAttribute('width'),\n\t\t\t\t\t\t'alt' : img.getAttribute('alt'),\n\t\t\t\t\t\t'src' : link.replace(this.srcReg, '$1'),\n\t\t\t\t\t\t'defaultFormat' : link.replace(this.srcReg, '$2')\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'youtube' :\n\t\t\t\t\tlet video = item.querySelector('.video');\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'youtube',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'src' : video.getAttribute('src'),\n\t\t\t\t\t\t'allow' : video.getAttribute('allow')\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'codepen' :\n\t\t\t\t\tlet iframe = item.querySelector('.iframe');\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'codepen',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'src' : iframe.getAttribute('src'),\n\t\t\t\t\t\t'height' : iframe.getAttribute('height'),\n\t\t\t\t\t\t'title' : iframe.getAttribute('title')\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'list_u' || type ===  'list_o' :\n\t\t\t\t\tlet childEl = item.querySelectorAll('li');\n\t\t\t\t\tlet child = [];\n\n\t\t\t\t\tchildEl.forEach(function(el){\n\t\t\t\t\t\tchild.push({\n\t\t\t\t\t\t\t'class' : [...el.classList],\n\t\t\t\t\t\t\t'textContent' : el.textContent\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'list',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'tag' : item.tagName.toLowerCase(),\n\t\t\t\t\t\t'listType' : item.getAttribute('type'),\n\t\t\t\t\t\t'child' : child\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'quote' :\n\t\t\t\t\tlet text = item.querySelector('.text').textContent;\n\t\t\t\t\tlet author = item.querySelector('.author').textContent;\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'quote',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'text' : text,\n\t\t\t\t\t\t'author' : author\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'table' :\n\t\t\t\t\tlet colgroup = [];\n\t\t\t\t\tlet tbody = [];\n\t\t\t\t\tlet caption = item.querySelector('caption').textContent;\n\t\t\t\t\tlet colList = item.querySelectorAll('col');\n\t\t\t\t\tlet trList = item.querySelectorAll('tr');\n\n\t\t\t\t\tcolList.forEach(function(col){\n\t\t\t\t\t\tcolgroup.push(col.classList.value);\n\t\t\t\t\t});\n\n\t\t\t\t\ttrList.forEach(function(tr){\n\t\t\t\t\t\tlet cellList = [];\n\t\t\t\t\t\tlet count = tr.childElementCount;\n\t\t\t\t\t\tlet children = tr.children;\n\n\t\t\t\t\t\tfor(let i = 0;i < count;i += 1){\n\t\t\t\t\t\t\tcellList.push({\n\t\t\t\t\t\t\t\t'tag' : children[i].tagName.toLowerCase(),\n\t\t\t\t\t\t\t\t'class' : [...children[i].classList],\n\t\t\t\t\t\t\t\t'textContent' : children[i].textContent\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttbody.push(cellList);\n\t\t\t\t\t});\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'table',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'caption' : caption,\n\t\t\t\t\t\t'colgroup' : colgroup,\n\t\t\t\t\t\t'child' : tbody\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'codeblock' :\n\t\t\t\t\tlet theme = item.dataset['theme'];\n\t\t\t\t\tlet lang = item.dataset['lang'];\n\t\t\t\t\tlet code = item.querySelector('code');\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'codeblock',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'theme' : theme,\n\t\t\t\t\t\t'lang' : lang,\n\t\t\t\t\t\t'code' : {\n\t\t\t\t\t\t\t'class' : [...code.classList],\n\t\t\t\t\t\t\t'innerHTML' : code.innerHTML\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'link_box' :\n\t\t\t\t\tlet url = item.querySelector('.link_box').getAttribute('href');\n\t\t\t\t\tlet imgSrc = item.querySelector('.img').getAttribute('src');\n\t\t\t\t\tlet title = item.querySelector('.link_title').textContent;\n\t\t\t\t\tlet description = item.querySelector('.link_description').textContent;\n\t\t\t\t\tlet domain = item.querySelector('.link_domain').textContent;\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'link_box',\n\t\t\t\t\t\t'class' : [...item.classList],\n\t\t\t\t\t\t'url' : url,\n\t\t\t\t\t\t'imgSrc' : imgSrc,\n\t\t\t\t\t\t\"title\" : title,\n\t\t\t\t\t\t\"description\" : description,\n\t\t\t\t\t\t\"domain\" : domain,\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tcase type === 'btn' :\n\t\t\t\t\tlet icon = item.querySelector('.icon');\n\t\t\t\t\tlet iconTagName = icon.tagName.toLowerCase();\n\t\t\t\t\tlet iconUrl;\n\n\t\t\t\t\tif(iconTagName === 'svg'){\n\t\t\t\t\t\ticonUrl = icon.querySelector('use').getAttribute('href');\n\t\t\t\t\t}else{\n\t\t\t\t\t\ticonUrl = icon.getAttribute('src');\n\t\t\t\t\t}\n\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'type' : 'btn',\n\t\t\t\t\t\t'value' : item.dataset['value'],\n\t\t\t\t\t\t'textContent' : item.textContent,\n\t\t\t\t\t\t'icon' : {\n\t\t\t\t\t\t\t\"type\" : iconTagName,\n\t\t\t\t\t\t\t\"viewBox\" : icon.getAttribute('viewBox'),\n\t\t\t\t\t\t\t\"class\" : [...icon.classList],\n\t\t\t\t\t\t\t\"url\" : iconUrl\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t\tdefault : \n\t\t\t\t\tarr.push({\n\t\t\t\t\t\t'other' : item.outerHTML\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.contentData[this.langStatus] = arr;\n\t\treturn this.contentData;\n\t}\n\n\tsetContent(jsonArr){\n\t\tlet html = '';\n\n\t\tjsonArr.forEach(function(item){\n\t\t\tswitch(item.type){\n\t\t\t\tcase 'title' :\n\t\t\t\t\thtml += `<h1 class=\"${item.class.join(' ')}\" contenteditable=\"true\" data-type=\"${item.type}\">${item.textContent}</h1>`;\n\t\t\t\tbreak;\n\t\t\t\tcase 'text' :\n\t\t\t\t\thtml += `<p class=\"${item.class.join(' ')}\" contenteditable=\"true\" data-type=\"${item.type}\">${item.textContent}</p>`;\n\t\t\t\tbreak;\n\t\t\t\tcase 'image' :\n\t\t\t\t\tif(item.useWebp === true){\n\t\t\t\t\t\thtml += `<picture class=\"${item.class.join(' ')}\" data-type=\"${item.type}\">`;\n\t\t\t\t\t\tif(item.hasWebp === true){\n\t\t\t\t\t\t\thtml += `<source srcset=\"${item.src}.webp\" type=\"image/webp\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml += `<img src=\"${item.src}.${item.defaultFormat}\" width=\"${item.size}\" alt=\"${item.alt}\" class=\"img\"></picture>`;\n\t\t\t\t\t}else{\n\t\t\t\t\t\thtml += `<div class=\"${item.class.join(' ')}\" data-type=\"image\"><img src=\"${item.src}.${item.defaultFormat}\" width=\"${item.size}\" alt=\"${item.alt}\" class=\"img\"></div>`;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'btn' :\n\t\t\t\t\tif(item.value === 'image'){\n\t\t\t\t\t\thtml += `<div class=\"btn\" data-type=\"${item.type}\" data-value=\"${item.value}\">`;\n\t\t\t\t\t\tif(item.icon.type === 'svg'){\n\t\t\t\t\t\t\thtml += `<svg viewBox=\"${item.icon.viewBox}\" class=\"${item.icon.class.join(' ')}\"><use class=\"path\" xlink:href=\"${item.icon.url}\" href=\"${item.icon.url}\"></use></svg>`;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\thtml += `<img src=\"${item.icon.url}\" alt=\"image icon\" class=\"\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml += `${item.textContent.replace(/\\n/i, '').replace(/^\\s*/i, '').replace(/\\s*$/i, '')}</div>`;\n\t\t\t\t\t}else if(item.value === 'youtube'){\n\t\t\t\t\t\thtml += `<div class=\"btn\" data-type=\"${item.type}\" data-value=\"${item.value}\">`;\n\t\t\t\t\t\tif(item.icon.type === 'svg'){\n\t\t\t\t\t\t\thtml += `<svg viewBox=\"${item.icon.viewBox}\" class=\"${item.icon.class.join(' ')}\"><use class=\"path\" xlink:href=\"${item.icon.url}\" href=\"${item.icon.url}\"></use></svg>`;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\thtml += `<img src=\"${item.icon.url}\" alt=\"youtube icon\" class=\"\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml += `${item.textContent.replace(/\\n/i, '').replace(/^\\s*/i, '').replace(/\\s*$/i, '')}</div>`;\n\t\t\t\t\t}else if(item.value === 'codepen'){\n\t\t\t\t\t\thtml += `<div class=\"btn\" data-type=\"${item.type}\" data-value=\"${item.value}\">`;\n\t\t\t\t\t\tif(item.icon.type === 'svg'){\n\t\t\t\t\t\t\thtml += `<svg viewBox=\"${item.icon.viewBox}\" class=\"${item.icon.class.join(' ')}\"><use class=\"path\" xlink:href=\"${item.icon.url}\" href=\"${item.icon.url}\"></use></svg>`;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\thtml += `<img src=\"${item.icon.url}\" alt=\"codepen icon\" class=\"\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml += `${item.textContent.replace(/\\n/i, '').replace(/^\\s*/i, '').replace(/\\s*$/i, '')}</div>`;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'youtube' :\n\t\t\t\t\thtml += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><iframe src=\"${item.src}\" allow=\"${item.allow}\" allowfullscreen=\"\" class=\"video\"></iframe></div>`;\n\t\t\t\tbreak;\n\t\t\t\tcase 'codepen' :\n\t\t\t\t\thtml += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><iframe height=\"${item.height}\" title=\"\" src=\"${item.src}\" allowfullscreen=\"\" class=\"iframe\"></iframe></div>`;\n\t\t\t\tbreak;\n\t\t\t\tcase 'list' :\n\t\t\t\t\tif(item.listType === null){\n\t\t\t\t\t\thtml += `<${item.tag} class=\"${item.class.join(' ')}\" data-type=\"${item.type}\">`;\n\t\t\t\t\t}else{\n\t\t\t\t\t\thtml += `<${item.tag} type=\"${item.listType}\" class=\"${item.class.join(' ')}\" data-type=\"${item.type}\">`;\n\t\t\t\t\t}\n\t\t\t\t\titem.child.forEach(function(row){\n\t\t\t\t\t\tif(row.class.length > 0){\n\t\t\t\t\t\t\thtml += `<li class=\"${row.class.join(' ')}\" contenteditable=\"true\">${row.textContent}</li>`;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\thtml += `<li contenteditable=\"true\">${row.textContent}</li>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\thtml += `</${item.tag}>`;\n\t\t\t\tbreak;\n\t\t\t\tcase 'quote' :\n\t\t\t\t\thtml += `<blockquote class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><p class=\"text\" contenteditable=\"true\">${item.text}</p><p class=\"author\" contenteditable=\"true\">${item.author}</p></blockquote>`;\n\t\t\t\tbreak;\n\t\t\t\tcase 'table' :\n\t\t\t\t\tlet rowNum = 0;\n\t\t\t\t\thtml += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><div class=\"scroll\"><table class=\"item_table\"><caption contenteditable=\"true\">${item.caption}</caption><colgroup>`;\n\t\t\t\t\titem.colgroup.forEach(function(col){\n\t\t\t\t\t\thtml += `<col class=\"${col}\">`;\n\t\t\t\t\t});\n\t\t\t\t\thtml += '</colgroup><tbody>';\n\t\t\t\t\titem.child.forEach(function(tr){\n\t\t\t\t\t\tlet cellNum = 0;\n\t\t\t\t\t\thtml += '<tr>';\n\t\t\t\t\t\ttr.forEach(function(cell){\n\t\t\t\t\t\t\tif(cell.class.length > 0){\n\t\t\t\t\t\t\t\thtml += `<${cell.tag} class=\"${cell.class.join(' ')}\" contenteditable=\"true\" data-x=\"${cellNum}\" data-y=\"${rowNum}\">${cell.textContent}</${cell.tag}>`;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\thtml += `<${cell.tag} contenteditable=\"true\" data-x=\"${cellNum}\" data-y=\"${rowNum}\">${cell.textContent}</${cell.tag}>`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcellNum += 1;\n\t\t\t\t\t\t});\n\t\t\t\t\t\thtml += '</tr>';\n\t\t\t\t\t\trowNum += 1;\n\t\t\t\t\t});\n\t\t\t\t\thtml += '</tbody></table></div><button class=\"btn btn_col_add\">Add col</button><button class=\"btn btn_col_del\">Remove col</button><button class=\"btn btn_row_add\">Add row</button><button class=\"btn btn_row_del\">Remove row</button></div>';\n\t\t\t\tbreak;\n\t\t\t\tcase 'codeblock' :\n\t\t\t\t\thtml += `<pre class=\"${item.class.join(' ')}\" data-type=\"${item.type}\" data-theme=\"${item.theme}\" data-lang=\"${item.lang}\"><code class=\"${item.code.class.join(' ')}\" contenteditable=\"true\">${item.code.innerHTML}</code></pre>`;\n\t\t\t\tbreak;\n\t\t\t\tcase 'link_box' :\n\t\t\t\t\thtml += `<div class=\"${item.class.join(' ')}\" data-type=\"${item.type}\"><a href=\"${item.url}\" target=\"_blank\" class=\"link_box clearfix\" draggable=\"false\"><div class=\"img_area\"><img src=\"${item.imgSrc}\" alt=\"미리보기 이미지\" class=\"img\" draggable=\"false\"></div><div class=\"text_area\"><p class=\"link_title ellipsis\">${item.title}</p><p class=\"link_description ellipsis\">${item.description}</p><p class=\"link_domain\">${item.domain}</p></div></a></div>`;\n\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\thtml += item.other;\n\t\t\t}\n\t\t});\n\n\t\tthis.contentArea.innerHTML = html;\n\t}\n\n\taddkustomContent(html){\n\t\tlet $el = this.getEl('.lastset') === false ? this.getEl(`${this.contentAreaName} > *:nth-last-child(1)`) : this.getEl('.lastset');\n\t\t$el.insertAdjacentHTML('afterend', html);\n\t\t$el.nextElementSibling.classList.add('lastset');\n\t\t$el.classList.remove('lastset');\n\t}\n}\n\nfunction init(wrap, options = {}){\n\twrap = wrap === null ? '.editor_area' : wrap;\n\tglobal.storage = new _setting__WEBPACK_IMPORTED_MODULE_0__[\"default\"](wrap, options);\n\n\tif(storage.mediaUploadURL === '' || storage.mediaUpdateURL === '' || storage.mediaDelURL === ''){\n\t\tconsole.warn(storage.messageNotSetAjax);\n\t\treturn;\n\t}else{\n\t\tstorage.activeElement = storage.wrap;\n\n\t\tif(storage.multiUpload === true){\n\t\t\tstorage.fileInput.setAttribute('multiple', true);\n\t\t}\n\n\t\tif(storage.loading === true){\n\t\t\tstorage.popBgArea.classList.remove('act');\n\t\t\tstorage.lodingArea.classList.remove('act');\n\t\t}\n\n\t\tif(storage.windowWidth > storage.changePint){\n\t\t\tstorage.contentAddList.classList.add('act');\n\t\t}else if(storage.windowWidth < storage.changePint){\n\t\t\tstorage.contentAddList.classList.remove('act');\n\t\t}\n\n\t\tObject(_content__WEBPACK_IMPORTED_MODULE_1__[\"bindingEvent\"])();\n\t\treturn this;\n\t}\n};\n\nfunction getOptionValue(name){\n\tif(storage[name] === undefined){\n\t\tconsole.error(`Optins name \"${name}\" is didn't have.`);\n\t\treturn false;\n\t}else{\n\t\treturn storage[name];\n\t}\n}\n\nfunction getContentData(){\n\tlet json = Object(_content__WEBPACK_IMPORTED_MODULE_1__[\"getContentJSON\"])();\n\tstorage.contentData[storage.langStatus] = json;\n\treturn storage.contentData;\n}\n\nfunction getStorage(){\n\treturn storage;\n}\n\nfunction setOptionValue(name, value){\n\tif(storage[name] === undefined){\n\t\tconsole.error('Can not set other option name.');\n\t\treturn false;\n\t}else{\n\t\tstorage[name] = value;\n\t\treturn storage[name];\n\t}\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/index.js?");

/***/ }),

/***/ "./common/js/deragnEditor/list.js":
/*!****************************************!*\
  !*** ./common/js/deragnEditor/list.js ***!
  \****************************************/
/*! exports provided: addList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addList\", function() { return addList; });\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n\n\nfunction addList($target, tag, type = null, content = ''){\n    Object(_element__WEBPACK_IMPORTED_MODULE_0__[\"removeLastsetClass\"])($target);\n    let dataType;\n    if(tag === 'ol'){\n        dataType = 'list_o';\n    }else{\n        dataType = 'list_u';\n    }\n    let attribute = type === null ? '' : 'type=\"'+ type +'\"';\n    let child = storage.HTMLChildList.replace(/\\[content\\]/g, content);\n    let html = storage.HTMLList.replace(/\\[tag\\]/g, tag)\n                .replace('[dataType]', dataType)\n                .replace('[type]', attribute)\n                .replace('[child]', child);\n\n    $target.insertAdjacentHTML('afterend', html);\n    $target.nextElementSibling.children[0].focus();\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/list.js?");

/***/ }),

/***/ "./common/js/deragnEditor/log.js":
/*!***************************************!*\
  !*** ./common/js/deragnEditor/log.js ***!
  \***************************************/
/*! exports provided: actionPrev, actionNext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"actionPrev\", function() { return actionPrev; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"actionNext\", function() { return actionNext; });\nfunction actionPrev(){\n\n}\n\nfunction actionNext(){\n\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/log.js?");

/***/ }),

/***/ "./common/js/deragnEditor/mouse.js":
/*!*****************************************!*\
  !*** ./common/js/deragnEditor/mouse.js ***!
  \*****************************************/
/*! exports provided: contentCheckByMouse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contentCheckByMouse\", function() { return contentCheckByMouse; });\n/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selector */ \"./common/js/deragnEditor/selector.js\");\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n/* harmony import */ var _option__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./option */ \"./common/js/deragnEditor/option.js\");\n\n\n\n\nfunction contentCheckByMouse(target, eventType){\n    if(eventType === 'click'){\n        storage.activeElement = target;\n    }\n    let $target = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getLastSetOrFocus\"])(target);\n    let base = window.getSelection().baseOffset;\n    let extent = window.getSelection().extentOffset;\n\n    if($target !== null){\n        let offset = $target.getBoundingClientRect();\n        let type = $target.dataset['type'];\n        let $children = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"getElList\"])(storage.contentAreaName + ' > *');\n        let isBtn = $target.classList.contains('btn');\n\n        switch(true){\n            case $target.tagName === 'CODE' && $target.parentElement.tagName === 'PRE' :\n                type = 'codeblock';\n            break;\n            case $target.constructor.name === 'HTMLElement' && $target.classList.contains('wordblock') :\n                type = 'wordblock';\n            break;\n            case $target.constructor.name === 'HTMLAnchorElement' :\n                type = 'link';\n            break;\n            case isBtn === true && eventType === 'click' :\n                if(typeof $target.dataset['value'] !== 'undefined'){\n                    let value = $target.dataset['value'];\n                    if(value === 'image'){\n                        storage.fileInput.dataset['type'] = 'image';\n                        storage.fileInput.setAttribute('accept', 'image/*');\n                        storage.fileInput.click();\n                    }else{\n                        type = value;\n                    }\n                }\n            break;\n            case window.getSelection().focusNode !== window.getSelection().baseNode :\n                type = 'text';\n            break;\n            case base !== extent :\n                if($target.tagName !== 'BLOCKQUOTE'){\n                    storage.focusNode = window.getSelection().focusNode;\n                    storage.baseNode = window.getSelection().baseNode;\n                    storage.startTextCursor = base;\n                    storage.endTextCursor = extent;\n                    type = 'word';\n                }\n            break;\n            case type === undefined :\n                type = 'all';\n            break;\n            default : \n                type = type;\n        }\n\n        if(eventType === 'click'){\n            Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"setLastElement\"])($target, $children);\n            Object(_option__WEBPACK_IMPORTED_MODULE_2__[\"openOptionPop\"])(offset, type);\n        }else if(eventType === 'mouseover' && (type === 'youtube' || type === 'codepen')){\n            Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"setLastElement\"])($target, $children);\n            Object(_option__WEBPACK_IMPORTED_MODULE_2__[\"openOptionPop\"])(offset, type);\n        }\n    }\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/mouse.js?");

/***/ }),

/***/ "./common/js/deragnEditor/option.js":
/*!******************************************!*\
  !*** ./common/js/deragnEditor/option.js ***!
  \******************************************/
/*! exports provided: openOptionPop, checkOptionsValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"openOptionPop\", function() { return openOptionPop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkOptionsValue\", function() { return checkOptionsValue; });\n/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selector */ \"./common/js/deragnEditor/selector.js\");\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n\n\n\nfunction openOptionPop(offset, type){\n    let y = Math.floor(offset.top + offset.height);\n    let $child = storage.popOptions.querySelectorAll('.col');\n    let typeReg = new RegExp(type, 'i');\n\n    if($child !== null){\n        $child.forEach(function($col){\n            let type = $col.dataset['group'];\n\n            switch(true){\n                case type === 'all' :\n                    $col.classList.add('act');\n                break;\n                case typeReg.test(type) === true :\n                    $col.classList.add('act');\n                break;\n                case typeReg.test(type) === false :\n                    $col.classList.remove('act');\n                break;\n            }\n        })\n    }\n\n    storage.popOptions.classList.add('act');\n    storage.popOptions.querySelector('.pop').classList.remove('act');\n    let x =  Math.floor((storage.windowWidth - storage.popOptions.getBoundingClientRect().width) / 2);\n    if(storage.windowWidth > storage.changePint){\n        storage.popOptions.style.cssText = 'transform:translate('+ x +'px, '+ y +'px)';\n    }else{\n        storage.popOptions.removeAttribute('style');\n    }\n}\n\nfunction checkOptionsValue($el){\n    let $target = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])($el, 'item');\n        $target = $target === null ? Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"findParent\"])($el, 'btn') : $target;\n    let $activeEl = storage.activeElement;\n\n    if($target !== null){\n        let type = $target.dataset['type'];\n        let activeElName = $activeEl.constructor.name;\n        let targetClassList = $target.classList.value;\n        let activeClassList = $activeEl.classList.value;\n\n        storage.urlInput.value = '';\n        switch(type){ // not default\n            case 'text' :\n                let colorClass = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(targetClassList, 'color');\n                let sizeClass = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(targetClassList, 'size');\n\n                if(colorClass !== ''){\n                    storage.btnColorSelect.dataset['class'] = colorClass;\n                }else{\n                    storage.btnColorSelect.dataset['class'] = 'default';\n                }\n\n                if(sizeClass !== ''){\n                    storage.fontSizeSelect.value = sizeClass;\n                }else{\n                    storage.fontSizeSelect.value = 'default';\n                }\n            break;\n            case 'image' :\n                let size = $target.querySelector('.img').getAttribute('width');\n                storage.widthInput.value = size;\n            break;\n            case 'youtube' :\n                if($target.classList.contains('btn') === false){\n                    let src = $target.querySelector('.video').getAttribute('src');\n                    storage.urlInput.value = src;\n                }else{\n                    storage.urlInput.value = '';\n                }\n            break;\n            case 'codepen' :\n                if($target.classList.contains('btn') === false){\n                    let $el = $target.querySelector('.iframe');\n                    let src = $el.getAttribute('src');\n                    let height = $el.getAttribute('height');\n                    storage.urlInput.value = src;\n                    storage.heightInput.value = height;\n                }else{\n                    storage.urlInput.value = '';\n                    storage.heightInput.value = '';\n                }\n            break;\n            case 'list_o' :\n                let listType = $target.getAttribute('type');\n                storage.listTypeSelect.value = listType;\n            break;\n            case 'codeblock' :\n                let theme = $target.dataset['theme'];\n                let lang = $target.dataset['lang'];\n                let codeSizeClass = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(targetClassList, 'size');\n\n                if(codeSizeClass !== ''){\n                    storage.fontSizeSelect.value = codeSizeClass;\n                }else{\n                    storage.fontSizeSelect.value = 'default';\n                }\n\n                storage.themeSelect.value = theme;\n                storage.languageSelect.value = lang;\n            break;\n        }\n\n        switch(true){\n            case activeElName === 'HTMLAnchorElement' :\n                let url = $activeEl.getAttribute('href');\n                storage.urlInput.value = url;\n            break;\n            case (activeElName === 'HTMLTableCellElement' || activeElName === 'HTMLTableCaptionElement') && $target.dataset['type'] === 'table':\n                if(activeElName === 'HTMLTableCellElement'){\n                    let colNumber = parseInt($activeEl.dataset['x']) + 1;\n                    let tableClass = $target.querySelector('col:nth-child('+ colNumber +')').classList.value;\n                    storage.colSizeSelect.value = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(tableClass, 'size');\n                }\n\n                let cellColor = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(activeClassList, 'color');\n                let cellFront = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(activeClassList, 'size');\n\n                if(cellColor !== ''){\n                    storage.btnColorSelect.dataset['class'] = cellColor;\n                }else{\n                    storage.btnColorSelect.dataset['class'] = 'default';\n                }\n\n                if(cellFront !== ''){\n                    storage.fontSizeSelect.value = cellFront;\n                }else{\n                    storage.fontSizeSelect.value = 'default';\n                }\n            break;\n            case activeElName === 'HTMLSpanElement' || activeElName === 'HTMLElement':\n                let className = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(activeClassList, 'color');\n\n                if(className !== ''){\n                    storage.btnColorSelect.dataset['class'] = className;\n                }else{\n                    storage.btnColorSelect.dataset['class'] = 'default';\n                }\n            break;\n            case activeElName === 'HTMLLIElement' :\n                let colorClass = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(activeClassList, 'color');\n                let sizeClass = Object(_element__WEBPACK_IMPORTED_MODULE_1__[\"getClassName\"])(activeClassList, 'size');\n\n                if(colorClass !== ''){\n                    storage.btnColorSelect.dataset['class'] = colorClass;\n                }else{\n                    storage.btnColorSelect.dataset['class'] = 'default';\n                }\n\n                if(sizeClass !== ''){\n                    storage.fontSizeSelect.value = sizeClass;\n                }else{\n                    storage.fontSizeSelect.value = 'default';\n                }\n            break;\n        }\n    }\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/option.js?");

/***/ }),

/***/ "./common/js/deragnEditor/phrase.js":
/*!******************************************!*\
  !*** ./common/js/deragnEditor/phrase.js ***!
  \******************************************/
/*! exports provided: addTextBlock, addQuote */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addTextBlock\", function() { return addTextBlock; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addQuote\", function() { return addQuote; });\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n\n\nfunction addTextBlock($target, content = '', position = 'afterend'){\n    Object(_element__WEBPACK_IMPORTED_MODULE_0__[\"removeLastsetClass\"])($target);\n\n    let html = storage.HTMLTextBlock.replace('[content]', content);\n\n    $target.insertAdjacentHTML(position, html);\n    $target.nextElementSibling.focus();\n}\n\nfunction addQuote($target){\n    Object(_element__WEBPACK_IMPORTED_MODULE_0__[\"removeLastsetClass\"])($target);\n    $target.insertAdjacentHTML('afterend', storage.HTMLQuote);\n    $target.nextElementSibling.children[0].focus();\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/phrase.js?");

/***/ }),

/***/ "./common/js/deragnEditor/selector.js":
/*!********************************************!*\
  !*** ./common/js/deragnEditor/selector.js ***!
  \********************************************/
/*! exports provided: getEl, getElList, findParent, checkElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEl\", function() { return getEl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getElList\", function() { return getElList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findParent\", function() { return findParent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkElement\", function() { return checkElement; });\nfunction getEl(name) {\n    let $el = document.querySelector(name);\n    return $el;\n}\n\nfunction getElList(name) {\n    let $el = document.querySelectorAll(name);\n\n    if($el.length < 1){\n        return null;\n    }else{\n        return $el;\n    }\n}\n\nfunction findParent($el, name){\n    if($el.constructor.name !== 'HTMLBodyElement' && $el.constructor.name !== 'HTMLHtmlElement'){\n        let check = $el.classList.contains(name);\n\n        if(check === true){\n            return $el;\n        }else{\n            return findParent($el.parentElement, name);\n        }\n    }else{\n        return null;\n    }\n}\n\nfunction checkElement(name, defaultName, type = 'single') {\n    let $item;\n    if(type ===  'single'){\n        $item = typeof name !== 'string' ? getEl(defaultName) : getEl(name);\n    }else{\n        $item = typeof name !== 'string' ? getElList(defaultName) : getElList(name);\n    }\n\n    if($item === null){\n        console.error('Can not find Element : ' + name);\n    }else{\n        return $item;\n    }\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/selector.js?");

/***/ }),

/***/ "./common/js/deragnEditor/setting.js":
/*!*******************************************!*\
  !*** ./common/js/deragnEditor/setting.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return setting; });\n/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selector */ \"./common/js/deragnEditor/selector.js\");\n\n\nclass setting {\n\tconstructor(wrap, options){\n\t\tthis.startTextCursor = 0;\n\t\tthis.endTextCursor = 0;\n\t\tthis.activeElement;\n\t\tthis.focusNode;\n\t\tthis.baseNode;\n\t\tthis.langStatus = 'ko';\n\t\tthis.windowWidth = window.innerWidth;\n\t\tthis.windowHeight = window.innerHeight;\n\t\tthis.changePint = typeof options.changePint !== 'number' ? 1120 : options.changePint;\n\t\tthis.maxImageWidth = typeof options.maxImageWidth !== 'number' ? 800 : options.maxImageWidth;\n\t\tthis.maxCodepenHeight = typeof options.maxCodepenHeight !== 'number' ? 1000 : options.maxCodepenHeight;\n\t\tthis.clickCehck = false;\n\t\tthis.useWebp = true;\n\t\tthis.loading = true;\n\t\tthis.codepenTheme = typeof options.codepenTheme !== 'string' ? 'dark' : options.codepenTheme;\n\t\tthis.multiUpload = typeof options.multiUpload !== 'boolean' ? false : options.multiUpload;\n\t\tthis.mediaUploadURL = typeof options.mediaUploadURL !== 'string' ? '' : options.mediaUploadURL;\n\t\tthis.mediaUpdateURL = typeof options.mediaUpdateURL !== 'string' ? '' : options.mediaUpdateURL;\n\t\tthis.mediaDelURL = typeof options.mediaDelURL !== 'string' ? '' : options.mediaDelURL;\n\t\t\n\t\tthis.makeLinkBoxType = typeof options.makeLinkBoxType !== 'self' ? 'self' : 'api';\n\t\tthis.makeLinkBoxURL = typeof options.makeLinkBoxURL !== 'string' ? '' : options.makeLinkBoxURL;\n\t\tthis.imageIconId = typeof options.imageIconId !== 'string' ? '#icon_image' : options.imageIconId;\n\t\tthis.youtubeIconId = typeof options.youtubeIconId !== 'string' ? '#icon_youtube' : options.youtubeIconId;\n\t\tthis.codepenIconId = typeof options.codepenIconId !== 'string' ? '#icon_codepen' : options.codepenIconId;\n\n\t\tthis.contentAreaName = typeof options.contentArea !== 'string' ? '.content_area' : options.contentArea;\n\t\tthis.popOptionsName = typeof options.popOptions !== 'string' ? '.pop_options' : options.popOptions;\n\t\tthis.popLinkName = typeof options.popLink !== 'string' ? '.pop_link_box' : options.popLink;\n\t\tthis.stickerListName = typeof options.stickerList !== 'string' ? '.pop_sticker' : options.stickerList;\n\t\tthis.contentAddListName = typeof options.contentAddList !== 'string' ? '.pop_content_list' : options.contentAddList;\n\t\tthis.addMediaListBtnName = typeof options.addMediaListBtn !== 'string' ? '.btn_add_media_list' : options.addMediaListBtn;\n\n\t\tthis.wrap = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(wrap, '.editor_area');\n\t\tthis.editorSection = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.editorSection, '.editor_section');\n\t\tthis.contentArea = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.contentArea, '.content_area');\n\t\tthis.contentAddList = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.contentAddList, '.pop_content_list');\n\t\tthis.mediaList = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.mediaList, '.pop_media .media_list');\n\t\tthis.popMedia = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.popMedia, '.pop_media');\n\t\tthis.popLang = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.popLang, '.pop_lang');\n\t\tthis.popBgArea = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.popBgArea, '.pop_bg');\n\t\tthis.popOptions = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.popOptions, '.pop_options');\n\t\tthis.popLink = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.popLink, '.pop_link_box');\n\t\tthis.lodingArea = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.lodingArea, '.pop_loding');\n\t\tthis.fileInput = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.fileInput, '.file_check');\n\t\tthis.uploadForm = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.uploadForm, '.file_uploader');\n\t\tthis.contentAddBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.contentAddBtn, '.btn_add_content', 'multi');\n\t\tthis.viewBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.viewBtn, '.btn_mod');\n\t\tthis.popBtns = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.popBtn, '.btn_pop', 'multi');\n\t\tthis.popCloseBtns = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.popCloseBtns, '.btn_pop_close', 'multi');\n\t\tthis.fontSizeSelect = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.fontSizeSelect, '.select_font_size');\n\t\tthis.btnColorSelect = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.colorSelect, '.select_color');\n\t\tthis.btnColor = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.colorSelect, '.btn_set_color', 'multi');\n\t\tthis.textAlgin = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.textAlgin, '.btn_text_algin', 'multi');\n\t\tthis.listTypeSelect = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.listTypeSelect, '.select_list_type');\n\t\tthis.colSizeSelect = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.colSizeSelect, '.select_col');\n\t\tthis.themeSelect = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.themeSelect, '.select_theme');\n\t\tthis.languageSelect = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.languageSelect, '.select_language');\n\t\tthis.changeThBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.changeThBtn, '.btn_change_th');\n\t\tthis.changeTdBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.changeTdBtn, '.btn_change_td');\n\t\tthis.widthInput = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.widthInput, '.options_width .value');\n\t\tthis.heightInput = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.heightInput, '.options_height .value');\n\t\tthis.urlInput = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.urlInput, '.options_url .value');\n\t\tthis.changeUrlBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.changeUrlBtn, '.btn_url_change');\n\t\tthis.addLinkBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.addLinkBtn, '.btn_url_link');\n\t\tthis.unlinkBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.unlinkBtn, '.btn_url_unlink');\n\t\tthis.boldBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.boldBtn, '.btn_bold');\n\t\tthis.italicBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.italicBtn, '.btn_italic');\n\t\tthis.underlineBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.underlineBtn, '.btn_underline');\n\t\tthis.strikeBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.strikeBtn, '.btn_strike');\n\t\tthis.wordblockBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.wordblockBtn, '.btn_wordblock');\n\t\tthis.contentDelBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.contentDelBtn, '.btn_del_content');\n\t\tthis.languageChangeBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.languageChangeBtn, '.btn_chang_lang', 'multi');\n\t\tthis.addMediaListBtn = Object(_selector__WEBPACK_IMPORTED_MODULE_0__[\"checkElement\"])(options.addMediaListBtn, '.btn_add_media_list');\n\n\t\tthis.HTMLTextBlock = '<p class=\"item item_text lastset\" contenteditable=\"true\" data-type=\"text\">[content]</p>';\n\t\tthis.HTMLBtn = '<div class=\"btn lastset\" data-type=\"btn\" data-value=\"[type]\"><svg viewbox=\"0 0 50 50\" class=\"icon\"><use class=\"path\" xlink:href=\"[icon_id]\" href=\"[icon_id]\" /></svg>[text]</div>';\n\t\tthis.HTMLList = '<[tag] [type] class=\"item item_list lastset\" data-type=\"[dataType]\">[child]</[tag]>';\n\t\tthis.HTMLChildList = '<li contenteditable=\"true\">[content]</li>';\n\t\tthis.HTMLsticker = '<div class=\"item item_sticker lastset\" data-type=\"sticker\">[el]</div>';\n\t\tthis.HTMLQuote = '<blockquote class=\"item item_quote lastset\" data-type=\"quote\"><p class=\"text\" contenteditable=\"true\"></p><p class=\"author\" contenteditable=\"true\"></p></blockquote>';\n\t\tthis.HTMLTable = '<div class=\"item item_table_area\" data-type=\"table\"><div class=\"scroll\"><table class=\"item_table\"><caption contenteditable=\"true\"></caption><colgroup><col class=\"size_100\"><col class=\"size_100\"><col class=\"size_100\"><col class=\"size_100\"></colgroup><tbody><tr><th contenteditable=\"true\" data-x=\"0\" data-y=\"0\"></th><th contenteditable=\"true\" data-x=\"1\" data-y=\"0\"></th><th contenteditable=\"true\" data-x=\"2\" data-y=\"0\"></th><th contenteditable=\"true\" data-x=\"3\" data-y=\"0\"></th></tr><tr><td contenteditable=\"true\" data-x=\"0\" data-y=\"1\"></td><td contenteditable=\"true\" data-x=\"1\" data-y=\"1\"></td><td contenteditable=\"true\" data-x=\"2\" data-y=\"1\"></td><td contenteditable=\"true\" data-x=\"3\" data-y=\"1\"></td></tr></tbody></table></div><button class=\"btn btn_col_add\">Add col</button><button class=\"btn btn_col_del\">Remove col</button><button class=\"btn btn_row_add\">Add row</button><button class=\"btn btn_row_del\">Remove row</button></div>';\n\t\tthis.HTMLCodeBlock = '<pre class=\"item item_codeblock lastset\" data-type=\"codeblock\" data-theme=\"default\" data-lang=\"text\"><code class=\"nohighlight\" contenteditable=\"true\"></code></pre>';\n\t\tthis.HTMLLinkBox = '<div class=\"item lastset\" data-type=\"link_box\"><a href=\"[url]\" target=\"_blank\" rel=\"nofollow\" class=\"link_box clearfix\" draggable=\"false\"><div class=\"img_area\"><img src=\"[imgSrc]\" alt=\"미리보기 이미지\" class=\"img\" draggable=\"false\"></div><div class=\"text_area\"><p class=\"link_title ellipsis\">[title]</p><p class=\"link_description ellipsis\">[description]</p><p class=\"link_domain\">[domain]</p></div></a></div>';\n\t\tthis.HTMLOption = '<option value=\"[value]\">[text]</option>';\n\t\tthis.HTMLMediaRow = '<li class=\"btn_add_media\" data-webp=\"[webp]\" data-idx=\"[idx]\"><div class=\"img_area\"><img src=\"[src]\" alt=\"[alt]\" width=\"[width]\" data-height=\"[height]\" class=\"img\"></div><p class=\"name\">[name]</p><button class=\"btn_remove_media\" data-idx=\"[idx]\">삭제</button></li>';\n\t\tthis.HTMLImageType01 = '<picture class=\"item item_image lastset\" data-type=\"image\">[source]<img src=\"[src]\" width=\"[width]\" alt=\"[alt]\" class=\"img\"></picture>';\n\t\tthis.HTMLImageSource = '<source srcset=\"[webp]\" type=\"image/webp\">';\n\t\tthis.HTMLImageType02 = '<div class=\"item item_image lastset\" data-type=\"image\"><img src=\"[src]\" width=\"[width]\" alt=\"[alt]\" class=\"img\"></div>';\n\t\tthis.HTMLYoutube = '<div class=\"item item_video lastset\" data-type=\"youtube\"><iframe src=\"[src]\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen class=\"video\"></iframe></div>';\n\t\tthis.HTMLCodepen = '<div class=\"item item_codepen lastset\" data-type=\"codepen\"><iframe height=\"[height]\" title=\"\" src=\"[src]\" allowfullscreen class=\"iframe\"></iframe></div>';\n\n\t\tthis.srcReg = new RegExp('(.*)\\\\.((jpg|png|gif|webp|bmp))', 'i');\n\t\tthis.youtubeReg = new RegExp('www.youtube.com', 'g');\n\t\tthis.youtubeCodeReg = new RegExp('((https:\\\\/\\\\/)?(www\\\\.)?youtu(be)?\\\\.(be|com)\\\\/(embed\\\\/|watch\\\\?v=)?)([^=\\\\/& :]*)(.*)', 'i');\n\t\tthis.codepenReg = new RegExp('codepen.io', 'g');\n\t\tthis.codepenCodeReg = new RegExp('(https:\\\\/\\\\/codepen\\\\.io\\\\/)(\\\\w*)\\\\/(pen|embed)\\\\/([A-Za-z]*)(.*)', 'i');\n\t\tthis.urlReg = new RegExp('https?:\\\\/\\\\/(\\\\w*:\\\\w*@)?[-\\\\w.]+(:\\\\d+)?(\\\\/([\\\\w\\\\/_.]*(\\\\?\\\\S+)?)?)?', 'i');\n\t\tthis.numberReg = new RegExp('[0-9]', 'g');\n\t\tthis.classReg = {\n\t\t\t'color' : new RegExp('color_[a-z0-9_]*', 'i'),\n\t\t\t'size' : new RegExp('size_[0-9]*', 'i'),\n\t\t\t'align' : new RegExp('align_(left|center|right)*', 'i')\n\t\t};\n\t\tthis.classList = ['color', 'size', 'align'];\n\n\t\tthis.messageNotSelecCodepen = typeof options.messageNotSelecCodepen !== 'string' ? `You didn't select Codepen` : options.messageNotSelecCodepen;\n\t\tthis.messageNotSelecImage = typeof options.messageNotSelecImage !== 'string' ? `You didn't select image` : options.messageNotSelecImage;\n\t\tthis.messageWrongURL = typeof options.messageWrongURL !== 'string' ? `Please enter a valid URL.\\nYou must enter http or https first.` : options.messageWrongURL;\n\t\tthis.messageNotSelect = typeof options.messageNotSelect !== 'string' ? `No item selected Please try again.` : options.messageNotSelect;\n\t\tthis.messageNoData = typeof options.messageNoData !== 'string' ? `Could not get data` : options.messageNoData;\n\t\tthis.messageExceedSize = typeof options.messageExceedSize !== 'string' ? `Can't exceed [size]px` : options.messageExceedSize;\n\t\tthis.messageWrongNode = typeof options.messageWrongNode !== 'string' ? 'Wrong cursor pointer' : options.messageWrongNode;\n\t\tthis.messageNotAnchorTag = typeof options.messageNotAnchorTag !== 'string' ? 'Active item is not link' : options.messageNotAnchorTag;\n\t\tthis.messageWrongValue = typeof options.messageWrongValue !== 'string' ? 'Wrong value' : options.messageWrongValue;\n\t\tthis.messageWrongUrlType = typeof options.messageWrongUrlType !== 'string' ? 'Wrong URL type.' : options.messageWrongUrlType;\n\t\tthis.messageDelImage = typeof options.messageDelImage !== 'string' ? 'All images of the document you area creating will also disappear.\\nAre you sure you want to delete it?' : options.messageDelImage;\n\t\tthis.messageDuplicateContent = typeof options.messageDuplicateContent !== 'string' ? 'This language not have content.\\nDo you want duplicate to content?' : options.messageDuplicateContent;\n\t\tthis.messageNotSetAjax = 'Didn\\'t setting Ajax url.';\n\n\t\tthis.linkBoxData = {};\n\t\tthis.contentData = {\n\t\t\t'ko' : {},\n\t\t\t'en' : {},\n\t\t\t'es' : {}\n\t\t};\n\t\tthis.logData = [];\n\t}\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/setting.js?");

/***/ }),

/***/ "./common/js/deragnEditor/table.js":
/*!*****************************************!*\
  !*** ./common/js/deragnEditor/table.js ***!
  \*****************************************/
/*! exports provided: tableConstrol, addTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tableConstrol\", function() { return tableConstrol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addTable\", function() { return addTable; });\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ \"./common/js/deragnEditor/element.js\");\n\n\nfunction tableConstrol($target){\n    let name = $target.constructor.name;\n    let classList = $target.classList;\n\n    if(name === 'HTMLButtonElement'){\n        let table = document.querySelector('.lastset .item_table');\n        let colgroup = table.querySelector('colgroup');\n        let colCount = table.querySelectorAll('col').length;\n        let row = table.querySelectorAll('tr');\n        let tbody = table.querySelector('tbody');\n\n        switch(true){\n            case classList.contains('btn_col_add') :\n                row.forEach(function(item){\n                    let y = item.querySelector('*:nth-child(1)').dataset['y'];\n\n                    item.insertAdjacentHTML('beforeend', `<td contenteditable=\"true\" data-x=\"${colCount}\" data-y=\"${y}\"></td>`);\n                });\n                colgroup.insertAdjacentHTML('beforeend', '<col class=\"size_100\">');\n            break;\n            case classList.contains('btn_col_del') :\n                if(colCount > 1){\n                    let lastCol = colgroup.querySelector('*:last-child');\n\n                    row.forEach(function(item){\n                        let lastChild = item.querySelector('*:last-child');\n\n                        lastChild.remove();\n                    });\n                    lastCol.remove();\n                }\n            break;\n            case classList.contains('btn_row_add') :\n                let html = '<tr>';\n\n                for(let i = 0;i < colCount;i += 1){\n                    html += `<td contenteditable=\"true\" data-x=\"${i}\" data-y=\"${row.length}\"></td>`;\n                }\n                html += '</tr>';\n\n                tbody.insertAdjacentHTML('beforeend', html);\n            break;\n            case classList.contains('btn_row_del') :\n                if(row.length > 1){\n                    tbody.querySelector('tr:last-child').remove();\n                }\n            break;\n        }\n    }\n}\n\nfunction addTable($target){\n    Object(_element__WEBPACK_IMPORTED_MODULE_0__[\"removeLastsetClass\"])($target);\n    $target.insertAdjacentHTML('afterend', storage.HTMLTable);\n    $target.nextElementSibling.querySelector('caption').focus();\n}\n\n//# sourceURL=webpack://dragonEditor/./common/js/deragnEditor/table.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://dragonEditor/(webpack)/buildin/global.js?");

/***/ })

/******/ });
});